{"version":3,"sources":["module.js","hotkeys.js","uploader.js","simditor.js"],"names":[],"mappingsjrfile":"simditor.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('simple-module', [\"jquery\"], function (a0) {\n      return (root['Module'] = factory(a0));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    root['SimpleModule'] = factory(jQuery);\n  }\n}(this, function ($) {\n\nvar Module,\n  slice = [].slice;\n\nModule = (function() {\n  Module.extend = function(obj) {\n    var key, ref, val;\n    if (!((obj != null) && typeof obj === 'object')) {\n      return;\n    }\n    for (key in obj) {\n      val = obj[key];\n      if (key !== 'included' && key !== 'extended') {\n        this[key] = val;\n      }\n    }\n    return (ref = obj.extended) != null ? ref.call(this) : void 0;\n  };\n\n  Module.include = function(obj) {\n    var key, ref, val;\n    if (!((obj != null) && typeof obj === 'object')) {\n      return;\n    }\n    for (key in obj) {\n      val = obj[key];\n      if (key !== 'included' && key !== 'extended') {\n        this.prototype[key] = val;\n      }\n    }\n    return (ref = obj.included) != null ? ref.call(this) : void 0;\n  };\n\n  Module.connect = function(cls) {\n    if (typeof cls !== 'function') {\n      return;\n    }\n    if (!cls.pluginName) {\n      throw new Error('Module.connect: cannot connect plugin without pluginName');\n      return;\n    }\n    cls.prototype._connected = true;\n    if (!this._connectedClasses) {\n      this._connectedClasses = [];\n    }\n    this._connectedClasses.push(cls);\n    if (cls.pluginName) {\n      return this[cls.pluginName] = cls;\n    }\n  };\n\n  Module.prototype.opts = {};\n\n  function Module(opts) {\n    var base, cls, i, instance, instances, len, name;\n    this.opts = $.extend({}, this.opts, opts);\n    (base = this.constructor)._connectedClasses || (base._connectedClasses = []);\n    instances = (function() {\n      var i, len, ref, results;\n      ref = this.constructor._connectedClasses;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        cls = ref[i];\n        name = cls.pluginName.charAt(0).toLowerCase() + cls.pluginName.slice(1);\n        if (cls.prototype._connected) {\n          cls.prototype._module = this;\n        }\n        results.push(this[name] = new cls());\n      }\n      return results;\n    }).call(this);\n    if (this._connected) {\n      this.opts = $.extend({}, this.opts, this._module.opts);\n    } else {\n      this._init();\n      for (i = 0, len = instances.length; i < len; i++) {\n        instance = instances[i];\n        if (typeof instance._init === \"function\") {\n          instance._init();\n        }\n      }\n    }\n    this.trigger('initialized');\n  }\n\n  Module.prototype._init = function() {};\n\n  Module.prototype.on = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    (ref = $(this)).on.apply(ref, args);\n    return this;\n  };\n\n  Module.prototype.one = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    (ref = $(this)).one.apply(ref, args);\n    return this;\n  };\n\n  Module.prototype.off = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    (ref = $(this)).off.apply(ref, args);\n    return this;\n  };\n\n  Module.prototype.trigger = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    (ref = $(this)).trigger.apply(ref, args);\n    return this;\n  };\n\n  Module.prototype.triggerHandler = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return (ref = $(this)).triggerHandler.apply(ref, args);\n  };\n\n  Module.prototype._t = function() {\n    var args, ref;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return (ref = this.constructor)._t.apply(ref, args);\n  };\n\n  Module._t = function() {\n    var args, key, ref, result;\n    key = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    result = ((ref = this.i18n[this.locale]) != null ? ref[key] : void 0) || '';\n    if (!(args.length > 0)) {\n      return result;\n    }\n    result = result.replace(/([^%]|^)%(?:(\\d+)\\$)?s/g, function(p0, p, position) {\n      if (position) {\n        return p + args[parseInt(position) - 1];\n      } else {\n        return p + args.shift();\n      }\n    });\n    return result.replace(/%%s/g, '%s');\n  };\n\n  Module.i18n = {\n    'zh-CN': {}\n  };\n\n  Module.locale = 'zh-CN';\n\n  return Module;\n\n})();\n\nreturn Module;\n\n}));\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('simple-hotkeys', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {\n      return (root['hotkeys'] = factory($, SimpleModule));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"),require(\"simple-module\"));\n  } else {\n    root.simple = root.simple || {};\n    root.simple['hotkeys'] = factory(jQuery,SimpleModule);\n  }\n}(this, function ($, SimpleModule) {\n\nvar Hotkeys, hotkeys,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nHotkeys = (function(superClass) {\n  extend(Hotkeys, superClass);\n\n  function Hotkeys() {\n    return Hotkeys.__super__.constructor.apply(this, arguments);\n  }\n\n  Hotkeys.count = 0;\n\n  Hotkeys.keyNameMap = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Esc\",\n    32: \"Spacebar\",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"Left\",\n    38: \"Up\",\n    39: \"Right\",\n    40: \"Down\",\n    45: \"Insert\",\n    46: \"Del\",\n    91: \"Meta\",\n    93: \"Meta\",\n    48: \"0\",\n    49: \"1\",\n    50: \"2\",\n    51: \"3\",\n    52: \"4\",\n    53: \"5\",\n    54: \"6\",\n    55: \"7\",\n    56: \"8\",\n    57: \"9\",\n    65: \"A\",\n    66: \"B\",\n    67: \"C\",\n    68: \"D\",\n    69: \"E\",\n    70: \"F\",\n    71: \"G\",\n    72: \"H\",\n    73: \"I\",\n    74: \"J\",\n    75: \"K\",\n    76: \"L\",\n    77: \"M\",\n    78: \"N\",\n    79: \"O\",\n    80: \"P\",\n    81: \"Q\",\n    82: \"R\",\n    83: \"S\",\n    84: \"T\",\n    85: \"U\",\n    86: \"V\",\n    87: \"W\",\n    88: \"X\",\n    89: \"Y\",\n    90: \"Z\",\n    96: \"0\",\n    97: \"1\",\n    98: \"2\",\n    99: \"3\",\n    100: \"4\",\n    101: \"5\",\n    102: \"6\",\n    103: \"7\",\n    104: \"8\",\n    105: \"9\",\n    106: \"Multiply\",\n    107: \"Add\",\n    109: \"Subtract\",\n    110: \"Decimal\",\n    111: \"Divide\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    124: \"F13\",\n    125: \"F14\",\n    126: \"F15\",\n    127: \"F16\",\n    128: \"F17\",\n    129: \"F18\",\n    130: \"F19\",\n    131: \"F20\",\n    132: \"F21\",\n    133: \"F22\",\n    134: \"F23\",\n    135: \"F24\",\n    59: \";\",\n    61: \"=\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"'\"\n  };\n\n  Hotkeys.aliases = {\n    \"escape\": \"esc\",\n    \"delete\": \"del\",\n    \"return\": \"enter\",\n    \"ctrl\": \"control\",\n    \"space\": \"spacebar\",\n    \"ins\": \"insert\",\n    \"cmd\": \"meta\",\n    \"command\": \"meta\",\n    \"wins\": \"meta\",\n    \"windows\": \"meta\"\n  };\n\n  Hotkeys.normalize = function(shortcut) {\n    var i, j, key, keyname, keys, len;\n    keys = shortcut.toLowerCase().replace(/\\s+/gi, \"\").split(\"+\");\n    for (i = j = 0, len = keys.length; j < len; i = ++j) {\n      key = keys[i];\n      keys[i] = this.aliases[key] || key;\n    }\n    keyname = keys.pop();\n    keys.sort().push(keyname);\n    return keys.join(\"_\");\n  };\n\n  Hotkeys.prototype.opts = {\n    el: document\n  };\n\n  Hotkeys.prototype._init = function() {\n    this.id = ++this.constructor.count;\n    this._map = {};\n    this._delegate = typeof this.opts.el === \"string\" ? document : this.opts.el;\n    return $(this._delegate).on(\"keydown.simple-hotkeys-\" + this.id, this.opts.el, (function(_this) {\n      return function(e) {\n        var ref;\n        return (ref = _this._getHander(e)) != null ? ref.call(_this, e) : void 0;\n      };\n    })(this));\n  };\n\n  Hotkeys.prototype._getHander = function(e) {\n    var keyname, shortcut;\n    if (!(keyname = this.constructor.keyNameMap[e.which])) {\n      return;\n    }\n    shortcut = \"\";\n    if (e.altKey) {\n      shortcut += \"alt_\";\n    }\n    if (e.ctrlKey) {\n      shortcut += \"control_\";\n    }\n    if (e.metaKey) {\n      shortcut += \"meta_\";\n    }\n    if (e.shiftKey) {\n      shortcut += \"shift_\";\n    }\n    shortcut += keyname.toLowerCase();\n    return this._map[shortcut];\n  };\n\n  Hotkeys.prototype.respondTo = function(subject) {\n    if (typeof subject === 'string') {\n      return this._map[this.constructor.normalize(subject)] != null;\n    } else {\n      return this._getHander(subject) != null;\n    }\n  };\n\n  Hotkeys.prototype.add = function(shortcut, handler) {\n    this._map[this.constructor.normalize(shortcut)] = handler;\n    return this;\n  };\n\n  Hotkeys.prototype.remove = function(shortcut) {\n    delete this._map[this.constructor.normalize(shortcut)];\n    return this;\n  };\n\n  Hotkeys.prototype.destroy = function() {\n    $(this._delegate).off(\".simple-hotkeys-\" + this.id);\n    this._map = {};\n    return this;\n  };\n\n  return Hotkeys;\n\n})(SimpleModule);\n\nhotkeys = function(opts) {\n  return new Hotkeys(opts);\n};\n\nreturn hotkeys;\n\n}));\n\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('simple-uploader', [\"jquery\",\"simple-module\"], function ($, SimpleModule) {\n      return (root['uploader'] = factory($, SimpleModule));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"),require(\"simple-module\"));\n  } else {\n    root.simple = root.simple || {};\n    root.simple['uploader'] = factory(jQuery,SimpleModule);\n  }\n}(this, function ($, SimpleModule) {\n\nvar Uploader, uploader,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nUploader = (function(superClass) {\n  extend(Uploader, superClass);\n\n  function Uploader() {\n    return Uploader.__super__.constructor.apply(this, arguments);\n  }\n\n  Uploader.count = 0;\n\n  Uploader.prototype.opts = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3\n  };\n\n  Uploader.prototype._init = function() {\n    this.files = [];\n    this.queue = [];\n    this.id = ++Uploader.count;\n    this.on('uploadcomplete', (function(_this) {\n      return function(e, file) {\n        _this.files.splice($.inArray(file, _this.files), 1);\n        if (_this.queue.length > 0 && _this.files.length < _this.opts.connectionCount) {\n          return _this.upload(_this.queue.shift());\n        } else if (_this.files.length === 0) {\n          return _this.uploading = false;\n        }\n      };\n    })(this));\n    return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n      return function(e) {\n        if (!_this.uploading) {\n          return;\n        }\n        e.originalEvent.returnValue = _this._t('leaveConfirm');\n        return _this._t('leaveConfirm');\n      };\n    })(this));\n  };\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, opts) {\n    var f, i, key, len;\n    if (opts == null) {\n      opts = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if ($.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, opts);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        opts.fileKey = key;\n      }\n      this.upload($.makeArray($(file)[0].files), opts);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    $.extend(file, opts);\n    if (this.files.length >= this.opts.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.triggerHandler('beforeupload', [file]) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.opts.url,\n      params: this.opts.params,\n      fileKey: this.opts.fileKey,\n      name: name,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n    return file.xhr = $.ajax({\n      url: file.url,\n      data: formData,\n      processData: false,\n      contentType: false,\n      type: 'POST',\n      headers: {\n        'X-File-Name': encodeURIComponent(file.name)\n      },\n      xhr: function() {\n        var req;\n        req = $.ajaxSettings.xhr();\n        if (req) {\n          req.upload.onprogress = (function(_this) {\n            return function(e) {\n              return _this.progress(e);\n            };\n          })(this);\n        }\n        return req;\n      },\n      progress: (function(_this) {\n        return function(e) {\n          if (!e.lengthComputable) {\n            return;\n          }\n          return _this.trigger('uploadprogress', [file, e.loaded, e.total]);\n        };\n      })(this),\n      error: (function(_this) {\n        return function(xhr, status, err) {\n          return _this.trigger('uploaderror', [file, xhr, status]);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(result) {\n          _this.trigger('uploadprogress', [file, file.size, file.size]);\n          _this.trigger('uploadsuccess', [file, result]);\n          return $(document).trigger('uploadsuccess', [file, result, _this]);\n        };\n      })(this),\n      complete: (function(_this) {\n        return function(xhr, status) {\n          return _this.trigger('uploadcomplete', [file, xhr.responseText]);\n        };\n      })(this)\n    });\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n  Uploader.prototype.readImageFile = function(fileObj, callback) {\n    var fileReader, img;\n    if (!$.isFunction(callback)) {\n      return;\n    }\n    img = new Image();\n    img.onload = function() {\n      return callback(img);\n    };\n    img.onerror = function() {\n      return callback();\n    };\n    if (window.FileReader && FileReader.prototype.readAsDataURL && /^image/.test(fileObj.type)) {\n      fileReader = new FileReader();\n      fileReader.onload = function(e) {\n        return img.src = e.target.result;\n      };\n      return fileReader.readAsDataURL(fileObj);\n    } else {\n      return callback();\n    }\n  };\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return Uploader;\n\n})(SimpleModule);\n\nuploader = function(opts) {\n  return new Uploader(opts);\n};\n\nreturn uploader;\n\n}));\n","/*!\n* Simditor v2.3.6\n* http://simditor.tower.im/\n* 2015-12-21\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('simditor', [\"jquery\",\"simple-module\",\"simple-hotkeys\",\"simple-uploader\"], function ($, SimpleModule, simpleHotkeys, simpleUploader) {\n      return (root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"),require(\"simple-module\"),require(\"simple-hotkeys\"),require(\"simple-uploader\"));\n  } else {\n    root['Simditor'] = factory(jQuery,SimpleModule,simple.hotkeys,simple.uploader);\n  }\n}(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {\n\nvar AlignmentButton, BlockquoteButton, BoldButton, Button, Clipboard, CodeButton, CodePopover, ColorButton, FontScaleButton, Formatter, HrButton, ImageButton, ImagePopover, IndentButton, Indentation, InputManager, ItalicButton, Keystroke, LinkButton, LinkPopover, ListButton, OrderListButton, OutdentButton, Popover, Selection, Simditor, StrikethroughButton, TableButton, TitleButton, Toolbar, UnderlineButton, UndoManager, UnorderListButton, Util,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\nSelection = (function(superClass) {\n  extend(Selection, superClass);\n\n  function Selection() {\n    return Selection.__super__.constructor.apply(this, arguments);\n  }\n\n  Selection.pluginName = 'Selection';\n\n  Selection.prototype._range = null;\n\n  Selection.prototype._startNodes = null;\n\n  Selection.prototype._endNodes = null;\n\n  Selection.prototype._containerNode = null;\n\n  Selection.prototype._nodes = null;\n\n  Selection.prototype._blockNodes = null;\n\n  Selection.prototype._rootNodes = null;\n\n  Selection.prototype._init = function() {\n    this.editor = this._module;\n    this._selection = document.getSelection();\n    this.editor.on('selectionchanged', (function(_this) {\n      return function(e) {\n        _this.reset();\n        return _this._range = _this._selection.getRangeAt(0);\n      };\n    })(this));\n    return this.editor.on('blur', (function(_this) {\n      return function(e) {\n        return _this.reset();\n      };\n    })(this));\n  };\n\n  Selection.prototype.reset = function() {\n    this._range = null;\n    this._startNodes = null;\n    this._endNodes = null;\n    this._containerNode = null;\n    this._nodes = null;\n    this._blockNodes = null;\n    return this._rootNodes = null;\n  };\n\n  Selection.prototype.clear = function() {\n    var e;\n    try {\n      this._selection.removeAllRanges();\n    } catch (_error) {\n      e = _error;\n    }\n    return this.reset();\n  };\n\n  Selection.prototype.range = function(range) {\n    var ffOrIE;\n    if (range) {\n      this.clear();\n      this._selection.addRange(range);\n      this._range = range;\n      ffOrIE = this.editor.util.browser.firefox || this.editor.util.browser.msie;\n      if (!this.editor.inputManager.focused && ffOrIE) {\n        this.editor.body.focus();\n      }\n    } else if (!this._range && this.editor.inputManager.focused && this._selection.rangeCount) {\n      this._range = this._selection.getRangeAt(0);\n    }\n    return this._range;\n  };\n\n  Selection.prototype.startNodes = function() {\n    if (this._range) {\n      this._startNodes || (this._startNodes = (function(_this) {\n        return function() {\n          var startNodes;\n          startNodes = $(_this._range.startContainer).parentsUntil(_this.editor.body).get();\n          startNodes.unshift(_this._range.startContainer);\n          return $(startNodes);\n        };\n      })(this)());\n    }\n    return this._startNodes;\n  };\n\n  Selection.prototype.endNodes = function() {\n    var endNodes;\n    if (this._range) {\n      this._endNodes || (this._endNodes = this._range.collapsed ? this.startNodes() : (endNodes = $(this._range.endContainer).parentsUntil(this.editor.body).get(), endNodes.unshift(this._range.endContainer), $(endNodes)));\n    }\n    return this._endNodes;\n  };\n\n  Selection.prototype.containerNode = function() {\n    if (this._range) {\n      this._containerNode || (this._containerNode = $(this._range.commonAncestorContainer));\n    }\n    return this._containerNode;\n  };\n\n  Selection.prototype.nodes = function() {\n    if (this._range) {\n      this._nodes || (this._nodes = (function(_this) {\n        return function() {\n          var nodes;\n          nodes = [];\n          if (_this.startNodes().first().is(_this.endNodes().first())) {\n            nodes = _this.startNodes().get();\n          } else {\n            _this.startNodes().each(function(i, node) {\n              var $endNode, $node, $nodes, endIndex, index, sharedIndex, startIndex;\n              $node = $(node);\n              if (_this.endNodes().index($node) > -1) {\n                return nodes.push(node);\n              } else if ($node.parent().is(_this.editor.body) || (sharedIndex = _this.endNodes().index($node.parent())) > -1) {\n                if (sharedIndex && sharedIndex > -1) {\n                  $endNode = _this.endNodes().eq(sharedIndex - 1);\n                } else {\n                  $endNode = _this.endNodes().last();\n                }\n                $nodes = $node.parent().contents();\n                startIndex = $nodes.index($node);\n                endIndex = $nodes.index($endNode);\n                return $.merge(nodes, $nodes.slice(startIndex, endIndex).get());\n              } else {\n                $nodes = $node.parent().contents();\n                index = $nodes.index($node);\n                return $.merge(nodes, $nodes.slice(index).get());\n              }\n            });\n            _this.endNodes().each(function(i, node) {\n              var $node, $nodes, index;\n              $node = $(node);\n              if ($node.parent().is(_this.editor.body) || _this.startNodes().index($node.parent()) > -1) {\n                nodes.push(node);\n                return false;\n              } else {\n                $nodes = $node.parent().contents();\n                index = $nodes.index($node);\n                return $.merge(nodes, $nodes.slice(0, index + 1));\n              }\n            });\n          }\n          return $($.unique(nodes));\n        };\n      })(this)());\n    }\n    return this._nodes;\n  };\n\n  Selection.prototype.blockNodes = function() {\n    if (!this._range) {\n      return;\n    }\n    this._blockNodes || (this._blockNodes = (function(_this) {\n      return function() {\n        return _this.nodes().filter(function(i, node) {\n          return _this.editor.util.isBlockNode(node);\n        });\n      };\n    })(this)());\n    return this._blockNodes;\n  };\n\n  Selection.prototype.rootNodes = function() {\n    if (!this._range) {\n      return;\n    }\n    this._rootNodes || (this._rootNodes = (function(_this) {\n      return function() {\n        return _this.nodes().filter(function(i, node) {\n          var $parent;\n          $parent = $(node).parent();\n          return $parent.is(_this.editor.body) || $parent.is('blockquote');\n        });\n      };\n    })(this)());\n    return this._rootNodes;\n  };\n\n  Selection.prototype.rangeAtEndOf = function(node, range) {\n    var afterLastNode, beforeLastNode, endNode, endNodeLength, lastNodeIsBr, result;\n    if (range == null) {\n      range = this.range();\n    }\n    if (!(range && range.collapsed)) {\n      return;\n    }\n    node = $(node)[0];\n    endNode = range.endContainer;\n    endNodeLength = this.editor.util.getNodeLength(endNode);\n    beforeLastNode = range.endOffset === endNodeLength - 1;\n    lastNodeIsBr = $(endNode).contents().last().is('br');\n    afterLastNode = range.endOffset === endNodeLength;\n    if (!((beforeLastNode && lastNodeIsBr) || afterLastNode)) {\n      return false;\n    }\n    if (node === endNode) {\n      return true;\n    } else if (!$.contains(node, endNode)) {\n      return false;\n    }\n    result = true;\n    $(endNode).parentsUntil(node).addBack().each(function(i, n) {\n      var $lastChild, beforeLastbr, isLastNode, nodes;\n      nodes = $(n).parent().contents().filter(function() {\n        return !(this !== n && this.nodeType === 3 && !this.nodeValue);\n      });\n      $lastChild = nodes.last();\n      isLastNode = $lastChild.get(0) === n;\n      beforeLastbr = $lastChild.is('br') && $lastChild.prev().get(0) === n;\n      if (!(isLastNode || beforeLastbr)) {\n        result = false;\n        return false;\n      }\n    });\n    return result;\n  };\n\n  Selection.prototype.rangeAtStartOf = function(node, range) {\n    var result, startNode;\n    if (range == null) {\n      range = this.range();\n    }\n    if (!(range && range.collapsed)) {\n      return;\n    }\n    node = $(node)[0];\n    startNode = range.startContainer;\n    if (range.startOffset !== 0) {\n      return false;\n    }\n    if (node === startNode) {\n      return true;\n    } else if (!$.contains(node, startNode)) {\n      return false;\n    }\n    result = true;\n    $(startNode).parentsUntil(node).addBack().each(function(i, n) {\n      var nodes;\n      nodes = $(n).parent().contents().filter(function() {\n        return !(this !== n && this.nodeType === 3 && !this.nodeValue);\n      });\n      if (nodes.first().get(0) !== n) {\n        return result = false;\n      }\n    });\n    return result;\n  };\n\n  Selection.prototype.insertNode = function(node, range) {\n    if (range == null) {\n      range = this.range();\n    }\n    if (!range) {\n      return;\n    }\n    node = $(node)[0];\n    range.insertNode(node);\n    return this.setRangeAfter(node, range);\n  };\n\n  Selection.prototype.setRangeAfter = function(node, range) {\n    if (range == null) {\n      range = this.range();\n    }\n    if (range == null) {\n      return;\n    }\n    node = $(node)[0];\n    range.setEndAfter(node);\n    range.collapse(false);\n    return this.range(range);\n  };\n\n  Selection.prototype.setRangeBefore = function(node, range) {\n    if (range == null) {\n      range = this.range();\n    }\n    if (range == null) {\n      return;\n    }\n    node = $(node)[0];\n    range.setEndBefore(node);\n    range.collapse(false);\n    return this.range(range);\n  };\n\n  Selection.prototype.setRangeAtStartOf = function(node, range) {\n    if (range == null) {\n      range = this.range();\n    }\n    node = $(node).get(0);\n    range.setEnd(node, 0);\n    range.collapse(false);\n    return this.range(range);\n  };\n\n  Selection.prototype.setRangeAtEndOf = function(node, range) {\n    var $lastNode, $node, contents, lastChild, lastChildLength, lastText, nodeLength;\n    if (range == null) {\n      range = this.range();\n    }\n    $node = $(node);\n    node = $node[0];\n    if ($node.is('pre')) {\n      contents = $node.contents();\n      if (contents.length > 0) {\n        lastChild = contents.last();\n        lastText = lastChild.text();\n        lastChildLength = this.editor.util.getNodeLength(lastChild[0]);\n        if (lastText.charAt(lastText.length - 1) === '\\n') {\n          range.setEnd(lastChild[0], lastChildLength - 1);\n        } else {\n          range.setEnd(lastChild[0], lastChildLength);\n        }\n      } else {\n        range.setEnd(node, 0);\n      }\n    } else {\n      nodeLength = this.editor.util.getNodeLength(node);\n      if (node.nodeType !== 3 && nodeLength > 0) {\n        $lastNode = $(node).contents().last();\n        if ($lastNode.is('br')) {\n          nodeLength -= 1;\n        } else if ($lastNode[0].nodeType !== 3 && this.editor.util.isEmptyNode($lastNode)) {\n          $lastNode.append(this.editor.util.phBr);\n          node = $lastNode[0];\n          nodeLength = 0;\n        }\n      }\n      range.setEnd(node, nodeLength);\n    }\n    range.collapse(false);\n    return this.range(range);\n  };\n\n  Selection.prototype.deleteRangeContents = function(range) {\n    var atEndOfBody, atStartOfBody, endRange, startRange;\n    if (range == null) {\n      range = this.range();\n    }\n    startRange = range.cloneRange();\n    endRange = range.cloneRange();\n    startRange.collapse(true);\n    endRange.collapse(false);\n    atStartOfBody = this.rangeAtStartOf(this.editor.body, startRange);\n    atEndOfBody = this.rangeAtEndOf(this.editor.body, endRange);\n    if (!range.collapsed && atStartOfBody && atEndOfBody) {\n      this.editor.body.empty();\n      range.setStart(this.editor.body[0], 0);\n      range.collapse(true);\n      this.range(range);\n    } else {\n      range.deleteContents();\n    }\n    return range;\n  };\n\n  Selection.prototype.breakBlockEl = function(el, range) {\n    var $el;\n    if (range == null) {\n      range = this.range();\n    }\n    $el = $(el);\n    if (!range.collapsed) {\n      return $el;\n    }\n    range.setStartBefore($el.get(0));\n    if (range.collapsed) {\n      return $el;\n    }\n    return $el.before(range.extractContents());\n  };\n\n  Selection.prototype.save = function(range) {\n    var endCaret, endRange, startCaret;\n    if (range == null) {\n      range = this.range();\n    }\n    if (this._selectionSaved) {\n      return;\n    }\n    endRange = range.cloneRange();\n    endRange.collapse(false);\n    startCaret = $('<span/>').addClass('simditor-caret-start');\n    endCaret = $('<span/>').addClass('simditor-caret-end');\n    endRange.insertNode(endCaret[0]);\n    range.insertNode(startCaret[0]);\n    this.clear();\n    return this._selectionSaved = true;\n  };\n\n  Selection.prototype.restore = function() {\n    var endCaret, endContainer, endOffset, range, startCaret, startContainer, startOffset;\n    if (!this._selectionSaved) {\n      return false;\n    }\n    startCaret = this.editor.body.find('.simditor-caret-start');\n    endCaret = this.editor.body.find('.simditor-caret-end');\n    if (startCaret.length && endCaret.length) {\n      startContainer = startCaret.parent();\n      startOffset = startContainer.contents().index(startCaret);\n      endContainer = endCaret.parent();\n      endOffset = endContainer.contents().index(endCaret);\n      if (startContainer[0] === endContainer[0]) {\n        endOffset -= 1;\n      }\n      range = document.createRange();\n      range.setStart(startContainer.get(0), startOffset);\n      range.setEnd(endContainer.get(0), endOffset);\n      startCaret.remove();\n      endCaret.remove();\n      this.range(range);\n    } else {\n      startCaret.remove();\n      endCaret.remove();\n    }\n    this._selectionSaved = false;\n    return range;\n  };\n\n  return Selection;\n\n})(SimpleModule);\n\nFormatter = (function(superClass) {\n  extend(Formatter, superClass);\n\n  function Formatter() {\n    return Formatter.__super__.constructor.apply(this, arguments);\n  }\n\n  Formatter.pluginName = 'Formatter';\n\n  Formatter.prototype.opts = {\n    allowedTags: [],\n    allowedAttributes: {},\n    allowedStyles: {}\n  };\n\n  Formatter.prototype._init = function() {\n    this.editor = this._module;\n    this._allowedTags = $.merge(['br', 'span', 'a', 'img', 'b', 'strong', 'i', 'strike', 'u', 'font', 'p', 'ul', 'ol', 'li', 'blockquote', 'pre', 'code', 'h1', 'h2', 'h3', 'h4', 'hr'], this.opts.allowedTags);\n    this._allowedAttributes = $.extend({\n      img: ['src', 'alt', 'width', 'height', 'data-non-image'],\n      a: ['href', 'target'],\n      font: ['color'],\n      code: ['class']\n    }, this.opts.allowedAttributes);\n    this._allowedStyles = $.extend({\n      span: ['color', 'font-size'],\n      b: ['color'],\n      i: ['color'],\n      strong: ['color'],\n      strike: ['color'],\n      u: ['color'],\n      p: ['margin-left', 'text-align'],\n      h1: ['margin-left', 'text-align'],\n      h2: ['margin-left', 'text-align'],\n      h3: ['margin-left', 'text-align'],\n      h4: ['margin-left', 'text-align']\n    }, this.opts.allowedStyles);\n    return this.editor.body.on('click', 'a', function(e) {\n      return false;\n    });\n  };\n\n  Formatter.prototype.decorate = function($el) {\n    if ($el == null) {\n      $el = this.editor.body;\n    }\n    this.editor.trigger('decorate', [$el]);\n    return $el;\n  };\n\n  Formatter.prototype.undecorate = function($el) {\n    if ($el == null) {\n      $el = this.editor.body.clone();\n    }\n    this.editor.trigger('undecorate', [$el]);\n    return $el;\n  };\n\n  Formatter.prototype.autolink = function($el) {\n    var $link, $node, findLinkNode, k, lastIndex, len, linkNodes, match, re, replaceEls, subStr, text, uri;\n    if ($el == null) {\n      $el = this.editor.body;\n    }\n    linkNodes = [];\n    findLinkNode = function($parentNode) {\n      return $parentNode.contents().each(function(i, node) {\n        var $node, text;\n        $node = $(node);\n        if ($node.is('a') || $node.closest('a, pre', $el).length) {\n          return;\n        }\n        if (!$node.is('iframe') && $node.contents().length) {\n          return findLinkNode($node);\n        } else if ((text = $node.text()) && /https?:\\/\\/|www\\./ig.test(text)) {\n          return linkNodes.push($node);\n        }\n      });\n    };\n    findLinkNode($el);\n    re = /(https?:\\/\\/|www\\.)[\\w\\-\\.\\?&=\\/#%:,@\\!\\+]+/ig;\n    for (k = 0, len = linkNodes.length; k < len; k++) {\n      $node = linkNodes[k];\n      text = $node.text();\n      replaceEls = [];\n      match = null;\n      lastIndex = 0;\n      while ((match = re.exec(text)) !== null) {\n        subStr = text.substring(lastIndex, match.index);\n        replaceEls.push(document.createTextNode(subStr));\n        lastIndex = re.lastIndex;\n        uri = /^(http(s)?:\\/\\/|\\/)/.test(match[0]) ? match[0] : 'http://' + match[0];\n        $link = $(\"<a href=\\\"\" + uri + \"\\\" rel=\\\"nofollow\\\"></a>\").text(match[0]);\n        replaceEls.push($link[0]);\n      }\n      replaceEls.push(document.createTextNode(text.substring(lastIndex)));\n      $node.replaceWith($(replaceEls));\n    }\n    return $el;\n  };\n\n  Formatter.prototype.format = function($el) {\n    var $node, blockNode, k, l, len, len1, n, node, ref, ref1;\n    if ($el == null) {\n      $el = this.editor.body;\n    }\n    if ($el.is(':empty')) {\n      $el.append('<p>' + this.editor.util.phBr + '</p>');\n      return $el;\n    }\n    ref = $el.contents();\n    for (k = 0, len = ref.length; k < len; k++) {\n      n = ref[k];\n      this.cleanNode(n, true);\n    }\n    ref1 = $el.contents();\n    for (l = 0, len1 = ref1.length; l < len1; l++) {\n      node = ref1[l];\n      $node = $(node);\n      if ($node.is('br')) {\n        if (typeof blockNode !== \"undefined\" && blockNode !== null) {\n          blockNode = null;\n        }\n        $node.remove();\n      } else if (this.editor.util.isBlockNode(node)) {\n        if ($node.is('li')) {\n          if (blockNode && blockNode.is('ul, ol')) {\n            blockNode.append(node);\n          } else {\n            blockNode = $('<ul/>').insertBefore(node);\n            blockNode.append(node);\n          }\n        } else {\n          blockNode = null;\n        }\n      } else {\n        if (!blockNode || blockNode.is('ul, ol')) {\n          blockNode = $('<p/>').insertBefore(node);\n        }\n        blockNode.append(node);\n        if (this.editor.util.isEmptyNode(blockNode)) {\n          blockNode.append(this.editor.util.phBr);\n        }\n      }\n    }\n    return $el;\n  };\n\n  Formatter.prototype.cleanNode = function(node, recursive) {\n    var $blockEls, $childImg, $node, $p, $td, allowedAttributes, attr, contents, isDecoration, k, l, len, len1, n, ref, ref1, text, textNode;\n    $node = $(node);\n    if (!($node.length > 0)) {\n      return;\n    }\n    if ($node[0].nodeType === 3) {\n      text = $node.text().replace(/(\\r\\n|\\n|\\r)/gm, '');\n      if (text) {\n        textNode = document.createTextNode(text);\n        $node.replaceWith(textNode);\n      } else {\n        $node.remove();\n      }\n      return;\n    }\n    contents = $node.is('iframe') ? null : $node.contents();\n    isDecoration = this.editor.util.isDecoratedNode($node);\n    if ($node.is(this._allowedTags.join(',')) || isDecoration) {\n      if ($node.is('a') && ($childImg = $node.find('img')).length > 0) {\n        $node.replaceWith($childImg);\n        $node = $childImg;\n        contents = null;\n      }\n      if ($node.is('td') && ($blockEls = $node.find(this.editor.util.blockNodes.join(','))).length > 0) {\n        $blockEls.each((function(_this) {\n          return function(i, blockEl) {\n            return $(blockEl).contents().unwrap();\n          };\n        })(this));\n        contents = $node.contents();\n      }\n      if ($node.is('img') && $node.hasClass('uploading')) {\n        $node.remove();\n      }\n      if (!isDecoration) {\n        allowedAttributes = this._allowedAttributes[$node[0].tagName.toLowerCase()];\n        ref = $.makeArray($node[0].attributes);\n        for (k = 0, len = ref.length; k < len; k++) {\n          attr = ref[k];\n          if (attr.name === 'style') {\n            continue;\n          }\n          if (!((allowedAttributes != null) && (ref1 = attr.name, indexOf.call(allowedAttributes, ref1) >= 0))) {\n            $node.removeAttr(attr.name);\n          }\n        }\n        this._cleanNodeStyles($node);\n        if ($node.is('span') && $node[0].attributes.length === 0) {\n          $node.contents().first().unwrap();\n        }\n      }\n    } else if ($node[0].nodeType === 1 && !$node.is(':empty')) {\n      if ($node.is('div, article, dl, header, footer, tr')) {\n        $node.append('<br/>');\n        contents.first().unwrap();\n      } else if ($node.is('table')) {\n        $p = $('<p/>');\n        $node.find('tr').each(function(i, tr) {\n          return $p.append($(tr).text() + '<br/>');\n        });\n        $node.replaceWith($p);\n        contents = null;\n      } else if ($node.is('thead, tfoot')) {\n        $node.remove();\n        contents = null;\n      } else if ($node.is('th')) {\n        $td = $('<td/>').append($node.contents());\n        $node.replaceWith($td);\n      } else {\n        contents.first().unwrap();\n      }\n    } else {\n      $node.remove();\n      contents = null;\n    }\n    if (recursive && (contents != null) && !$node.is('pre')) {\n      for (l = 0, len1 = contents.length; l < len1; l++) {\n        n = contents[l];\n        this.cleanNode(n, true);\n      }\n    }\n    return null;\n  };\n\n  Formatter.prototype._cleanNodeStyles = function($node) {\n    var allowedStyles, k, len, pair, ref, ref1, style, styleStr, styles;\n    styleStr = $node.attr('style');\n    if (!styleStr) {\n      return;\n    }\n    $node.removeAttr('style');\n    allowedStyles = this._allowedStyles[$node[0].tagName.toLowerCase()];\n    if (!(allowedStyles && allowedStyles.length > 0)) {\n      return $node;\n    }\n    styles = {};\n    ref = styleStr.split(';');\n    for (k = 0, len = ref.length; k < len; k++) {\n      style = ref[k];\n      style = $.trim(style);\n      pair = style.split(':');\n      if (!(pair.length = 2)) {\n        continue;\n      }\n      if (ref1 = pair[0], indexOf.call(allowedStyles, ref1) >= 0) {\n        styles[$.trim(pair[0])] = $.trim(pair[1]);\n      }\n    }\n    if (Object.keys(styles).length > 0) {\n      $node.css(styles);\n    }\n    return $node;\n  };\n\n  Formatter.prototype.clearHtml = function(html, lineBreak) {\n    var container, contents, result;\n    if (lineBreak == null) {\n      lineBreak = true;\n    }\n    container = $('<div/>').append(html);\n    contents = container.contents();\n    result = '';\n    contents.each((function(_this) {\n      return function(i, node) {\n        var $node, children;\n        if (node.nodeType === 3) {\n          return result += node.nodeValue;\n        } else if (node.nodeType === 1) {\n          $node = $(node);\n          children = $node.is('iframe') ? null : $node.contents();\n          if (children && children.length > 0) {\n            result += _this.clearHtml(children);\n          }\n          if (lineBreak && i < contents.length - 1 && $node.is('br, p, div, li,tr, pre, address, artticle, aside, dl, figcaption, footer, h1, h2,h3, h4, header')) {\n            return result += '\\n';\n          }\n        }\n      };\n    })(this));\n    return result;\n  };\n\n  Formatter.prototype.beautify = function($contents) {\n    var uselessP;\n    uselessP = function($el) {\n      return !!($el.is('p') && !$el.text() && $el.children(':not(br)').length < 1);\n    };\n    return $contents.each(function(i, el) {\n      var $el, invalid;\n      $el = $(el);\n      invalid = $el.is(':not(img, br, col, td, hr, [class^=\"simditor-\"]):empty');\n      if (invalid || uselessP($el)) {\n        $el.remove();\n      }\n      return $el.find(':not(img, br, col, td, hr, [class^=\"simditor-\"]):empty').remove();\n    });\n  };\n\n  return Formatter;\n\n})(SimpleModule);\n\nInputManager = (function(superClass) {\n  extend(InputManager, superClass);\n\n  function InputManager() {\n    return InputManager.__super__.constructor.apply(this, arguments);\n  }\n\n  InputManager.pluginName = 'InputManager';\n\n  InputManager.prototype._modifierKeys = [16, 17, 18, 91, 93, 224];\n\n  InputManager.prototype._arrowKeys = [37, 38, 39, 40];\n\n  InputManager.prototype._init = function() {\n    var selectAllKey, submitKey;\n    this.editor = this._module;\n    this.throttledValueChanged = this.editor.util.throttle((function(_this) {\n      return function(params) {\n        return setTimeout(function() {\n          return _this.editor.trigger('valuechanged', params);\n        }, 10);\n      };\n    })(this), 300);\n    this.throttledSelectionChanged = this.editor.util.throttle((function(_this) {\n      return function() {\n        return _this.editor.trigger('selectionchanged');\n      };\n    })(this), 50);\n    $(document).on('selectionchange.simditor' + this.editor.id, (function(_this) {\n      return function(e) {\n        var triggerEvent;\n        if (!(_this.focused && !_this.editor.clipboard.pasting)) {\n          return;\n        }\n        triggerEvent = function() {\n          if (_this._selectionTimer) {\n            clearTimeout(_this._selectionTimer);\n            _this._selectionTimer = null;\n          }\n          if (_this.editor.selection._selection.rangeCount > 0) {\n            return _this.throttledSelectionChanged();\n          } else {\n            return _this._selectionTimer = setTimeout(function() {\n              _this._selectionTimer = null;\n              if (_this.focused) {\n                return triggerEvent();\n              }\n            }, 10);\n          }\n        };\n        return triggerEvent();\n      };\n    })(this));\n    this.editor.on('valuechanged', (function(_this) {\n      return function() {\n        var $rootBlocks;\n        _this.lastCaretPosition = null;\n        $rootBlocks = _this.editor.body.children().filter(function(i, node) {\n          return _this.editor.util.isBlockNode(node);\n        });\n        if (_this.focused && $rootBlocks.length === 0) {\n          _this.editor.selection.save();\n          _this.editor.formatter.format();\n          _this.editor.selection.restore();\n        }\n        _this.editor.body.find('hr, pre, .simditor-table').each(function(i, el) {\n          var $el, formatted;\n          $el = $(el);\n          if ($el.parent().is('blockquote') || $el.parent()[0] === _this.editor.body[0]) {\n            formatted = false;\n            if ($el.next().length === 0) {\n              $('<p/>').append(_this.editor.util.phBr).insertAfter($el);\n              formatted = true;\n            }\n            if ($el.prev().length === 0) {\n              $('<p/>').append(_this.editor.util.phBr).insertBefore($el);\n              formatted = true;\n            }\n            if (formatted) {\n              return _this.throttledValueChanged();\n            }\n          }\n        });\n        _this.editor.body.find('pre:empty').append(_this.editor.util.phBr);\n        if (!_this.editor.util.support.onselectionchange && _this.focused) {\n          return _this.throttledSelectionChanged();\n        }\n      };\n    })(this));\n    this.editor.body.on('keydown', $.proxy(this._onKeyDown, this)).on('keypress', $.proxy(this._onKeyPress, this)).on('keyup', $.proxy(this._onKeyUp, this)).on('mouseup', $.proxy(this._onMouseUp, this)).on('focus', $.proxy(this._onFocus, this)).on('blur', $.proxy(this._onBlur, this)).on('drop', $.proxy(this._onDrop, this)).on('input', $.proxy(this._onInput, this));\n    if (this.editor.util.browser.firefox) {\n      this.editor.hotkeys.add('cmd+left', (function(_this) {\n        return function(e) {\n          e.preventDefault();\n          _this.editor.selection._selection.modify('move', 'backward', 'lineboundary');\n          return false;\n        };\n      })(this));\n      this.editor.hotkeys.add('cmd+right', (function(_this) {\n        return function(e) {\n          e.preventDefault();\n          _this.editor.selection._selection.modify('move', 'forward', 'lineboundary');\n          return false;\n        };\n      })(this));\n      selectAllKey = this.editor.util.os.mac ? 'cmd+a' : 'ctrl+a';\n      this.editor.hotkeys.add(selectAllKey, (function(_this) {\n        return function(e) {\n          var $children, firstBlock, lastBlock, range;\n          $children = _this.editor.body.children();\n          if (!($children.length > 0)) {\n            return;\n          }\n          firstBlock = $children.first().get(0);\n          lastBlock = $children.last().get(0);\n          range = document.createRange();\n          range.setStart(firstBlock, 0);\n          range.setEnd(lastBlock, _this.editor.util.getNodeLength(lastBlock));\n          _this.editor.selection.range(range);\n          return false;\n        };\n      })(this));\n    }\n    submitKey = this.editor.util.os.mac ? 'cmd+enter' : 'ctrl+enter';\n    return this.editor.hotkeys.add(submitKey, (function(_this) {\n      return function(e) {\n        _this.editor.el.closest('form').find('button:submit').click();\n        return false;\n      };\n    })(this));\n  };\n\n  InputManager.prototype._onFocus = function(e) {\n    if (this.editor.clipboard.pasting) {\n      return;\n    }\n    this.editor.el.addClass('focus').removeClass('error');\n    this.focused = true;\n    return setTimeout((function(_this) {\n      return function() {\n        var $blockEl, range;\n        range = _this.editor.selection._selection.getRangeAt(0);\n        if (range.startContainer === _this.editor.body[0]) {\n          if (_this.lastCaretPosition) {\n            _this.editor.undoManager.caretPosition(_this.lastCaretPosition);\n          } else {\n            $blockEl = _this.editor.body.children().first();\n            range = document.createRange();\n            _this.editor.selection.setRangeAtStartOf($blockEl, range);\n          }\n        }\n        _this.lastCaretPosition = null;\n        _this.editor.triggerHandler('focus');\n        if (!_this.editor.util.support.onselectionchange) {\n          return _this.throttledSelectionChanged();\n        }\n      };\n    })(this), 0);\n  };\n\n  InputManager.prototype._onBlur = function(e) {\n    var ref;\n    if (this.editor.clipboard.pasting) {\n      return;\n    }\n    this.editor.el.removeClass('focus');\n    this.editor.sync();\n    this.focused = false;\n    this.lastCaretPosition = (ref = this.editor.undoManager.currentState()) != null ? ref.caret : void 0;\n    return this.editor.triggerHandler('blur');\n  };\n\n  InputManager.prototype._onMouseUp = function(e) {\n    if (!this.editor.util.support.onselectionchange) {\n      return this.throttledSelectionChanged();\n    }\n  };\n\n  InputManager.prototype._onKeyDown = function(e) {\n    var ref, ref1;\n    if (this.editor.triggerHandler(e) === false) {\n      return false;\n    }\n    if (this.editor.hotkeys.respondTo(e)) {\n      return;\n    }\n    if (this.editor.keystroke.respondTo(e)) {\n      this.throttledValueChanged();\n      return false;\n    }\n    if ((ref = e.which, indexOf.call(this._modifierKeys, ref) >= 0) || (ref1 = e.which, indexOf.call(this._arrowKeys, ref1) >= 0)) {\n      return;\n    }\n    if (this.editor.util.metaKey(e) && e.which === 86) {\n      return;\n    }\n    if (!this.editor.util.support.oninput) {\n      this.throttledValueChanged(['typing']);\n    }\n    return null;\n  };\n\n  InputManager.prototype._onKeyPress = function(e) {\n    if (this.editor.triggerHandler(e) === false) {\n      return false;\n    }\n  };\n\n  InputManager.prototype._onKeyUp = function(e) {\n    var p, ref;\n    if (this.editor.triggerHandler(e) === false) {\n      return false;\n    }\n    if (!this.editor.util.support.onselectionchange && (ref = e.which, indexOf.call(this._arrowKeys, ref) >= 0)) {\n      this.throttledValueChanged();\n      return;\n    }\n    if ((e.which === 8 || e.which === 46) && this.editor.util.isEmptyNode(this.editor.body)) {\n      this.editor.body.empty();\n      p = $('<p/>').append(this.editor.util.phBr).appendTo(this.editor.body);\n      this.editor.selection.setRangeAtStartOf(p);\n    }\n  };\n\n  InputManager.prototype._onDrop = function(e) {\n    if (this.editor.triggerHandler(e) === false) {\n      return false;\n    }\n    return this.throttledValueChanged();\n  };\n\n  InputManager.prototype._onInput = function(e) {\n    return this.throttledValueChanged(['oninput']);\n  };\n\n  return InputManager;\n\n})(SimpleModule);\n\nKeystroke = (function(superClass) {\n  extend(Keystroke, superClass);\n\n  function Keystroke() {\n    return Keystroke.__super__.constructor.apply(this, arguments);\n  }\n\n  Keystroke.pluginName = 'Keystroke';\n\n  Keystroke.prototype._init = function() {\n    this.editor = this._module;\n    this._keystrokeHandlers = {};\n    return this._initKeystrokeHandlers();\n  };\n\n  Keystroke.prototype.add = function(key, node, handler) {\n    key = key.toLowerCase();\n    key = this.editor.hotkeys.constructor.aliases[key] || key;\n    if (!this._keystrokeHandlers[key]) {\n      this._keystrokeHandlers[key] = {};\n    }\n    return this._keystrokeHandlers[key][node] = handler;\n  };\n\n  Keystroke.prototype.respondTo = function(e) {\n    var base, key, ref, result;\n    key = (ref = this.editor.hotkeys.constructor.keyNameMap[e.which]) != null ? ref.toLowerCase() : void 0;\n    if (!key) {\n      return;\n    }\n    if (key in this._keystrokeHandlers) {\n      result = typeof (base = this._keystrokeHandlers[key])['*'] === \"function\" ? base['*'](e) : void 0;\n      if (!result) {\n        this.editor.selection.startNodes().each((function(_this) {\n          return function(i, node) {\n            var handler, ref1;\n            if (node.nodeType !== Node.ELEMENT_NODE) {\n              return;\n            }\n            handler = (ref1 = _this._keystrokeHandlers[key]) != null ? ref1[node.tagName.toLowerCase()] : void 0;\n            result = typeof handler === \"function\" ? handler(e, $(node)) : void 0;\n            if (result === true || result === false) {\n              return false;\n            }\n          };\n        })(this));\n      }\n      if (result) {\n        return true;\n      }\n    }\n  };\n\n  Keystroke.prototype._initKeystrokeHandlers = function() {\n    var titleEnterHandler;\n    if (this.editor.util.browser.safari) {\n      this.add('enter', '*', (function(_this) {\n        return function(e) {\n          var $blockEl, $br;\n          if (!e.shiftKey) {\n            return;\n          }\n          $blockEl = _this.editor.selection.blockNodes().last();\n          if ($blockEl.is('pre')) {\n            return;\n          }\n          $br = $('<br/>');\n          if (_this.editor.selection.rangeAtEndOf($blockEl)) {\n            _this.editor.selection.insertNode($br);\n            _this.editor.selection.insertNode($('<br/>'));\n            _this.editor.selection.setRangeBefore($br);\n          } else {\n            _this.editor.selection.insertNode($br);\n          }\n          return true;\n        };\n      })(this));\n    }\n    if (this.editor.util.browser.webkit || this.editor.util.browser.msie) {\n      titleEnterHandler = (function(_this) {\n        return function(e, $node) {\n          var $p;\n          if (!_this.editor.selection.rangeAtEndOf($node)) {\n            return;\n          }\n          $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);\n          _this.editor.selection.setRangeAtStartOf($p);\n          return true;\n        };\n      })(this);\n      this.add('enter', 'h1', titleEnterHandler);\n      this.add('enter', 'h2', titleEnterHandler);\n      this.add('enter', 'h3', titleEnterHandler);\n      this.add('enter', 'h4', titleEnterHandler);\n      this.add('enter', 'h5', titleEnterHandler);\n      this.add('enter', 'h6', titleEnterHandler);\n    }\n    this.add('backspace', '*', (function(_this) {\n      return function(e) {\n        var $blockEl, $prevBlockEl, $rootBlock, isWebkit;\n        $rootBlock = _this.editor.selection.rootNodes().first();\n        $prevBlockEl = $rootBlock.prev();\n        if ($prevBlockEl.is('hr') && _this.editor.selection.rangeAtStartOf($rootBlock)) {\n          _this.editor.selection.save();\n          $prevBlockEl.remove();\n          _this.editor.selection.restore();\n          return true;\n        }\n        $blockEl = _this.editor.selection.blockNodes().last();\n        isWebkit = _this.editor.util.browser.webkit;\n        if (isWebkit && _this.editor.selection.rangeAtStartOf($blockEl)) {\n          _this.editor.selection.save();\n          _this.editor.formatter.cleanNode($blockEl, true);\n          _this.editor.selection.restore();\n          return null;\n        }\n      };\n    })(this));\n    this.add('enter', 'li', (function(_this) {\n      return function(e, $node) {\n        var $cloneNode, listEl, newBlockEl, newListEl;\n        $cloneNode = $node.clone();\n        $cloneNode.find('ul, ol').remove();\n        if (!(_this.editor.util.isEmptyNode($cloneNode) && $node.is(_this.editor.selection.blockNodes().last()))) {\n          return;\n        }\n        listEl = $node.parent();\n        if ($node.next('li').length > 0) {\n          if (!_this.editor.util.isEmptyNode($node)) {\n            return;\n          }\n          if (listEl.parent('li').length > 0) {\n            newBlockEl = $('<li/>').append(_this.editor.util.phBr).insertAfter(listEl.parent('li'));\n            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));\n            newBlockEl.append(newListEl);\n          } else {\n            newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);\n            newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));\n            newBlockEl.after(newListEl);\n          }\n        } else {\n          if (listEl.parent('li').length > 0) {\n            newBlockEl = $('<li/>').insertAfter(listEl.parent('li'));\n            if ($node.contents().length > 0) {\n              newBlockEl.append($node.contents());\n            } else {\n              newBlockEl.append(_this.editor.util.phBr);\n            }\n          } else {\n            newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);\n            if ($node.children('ul, ol').length > 0) {\n              newBlockEl.after($node.children('ul, ol'));\n            }\n          }\n        }\n        if ($node.prev('li').length) {\n          $node.remove();\n        } else {\n          listEl.remove();\n        }\n        _this.editor.selection.setRangeAtStartOf(newBlockEl);\n        return true;\n      };\n    })(this));\n    this.add('enter', 'pre', (function(_this) {\n      return function(e, $node) {\n        var $p, breakNode, range;\n        e.preventDefault();\n        if (e.shiftKey) {\n          $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);\n          _this.editor.selection.setRangeAtStartOf($p);\n          return true;\n        }\n        range = _this.editor.selection.range();\n        breakNode = null;\n        range.deleteContents();\n        if (!_this.editor.util.browser.msie && _this.editor.selection.rangeAtEndOf($node)) {\n          breakNode = document.createTextNode('\\n\\n');\n          range.insertNode(breakNode);\n          range.setEnd(breakNode, 1);\n        } else {\n          breakNode = document.createTextNode('\\n');\n          range.insertNode(breakNode);\n          range.setStartAfter(breakNode);\n        }\n        range.collapse(false);\n        _this.editor.selection.range(range);\n        return true;\n      };\n    })(this));\n    this.add('enter', 'blockquote', (function(_this) {\n      return function(e, $node) {\n        var $closestBlock, range;\n        $closestBlock = _this.editor.selection.blockNodes().last();\n        if (!($closestBlock.is('p') && !$closestBlock.next().length && _this.editor.util.isEmptyNode($closestBlock))) {\n          return;\n        }\n        $node.after($closestBlock);\n        range = document.createRange();\n        _this.editor.selection.setRangeAtStartOf($closestBlock, range);\n        return true;\n      };\n    })(this));\n    this.add('backspace', 'li', (function(_this) {\n      return function(e, $node) {\n        var $br, $childList, $newLi, $prevChildList, $prevNode, $textNode, isFF, range, text;\n        $childList = $node.children('ul, ol');\n        $prevNode = $node.prev('li');\n        if (!($childList.length > 0 && $prevNode.length > 0)) {\n          return false;\n        }\n        text = '';\n        $textNode = null;\n        $node.contents().each(function(i, n) {\n          if (n.nodeType === 1 && /UL|OL/.test(n.nodeName)) {\n            return false;\n          }\n          if (n.nodeType === 1 && /BR/.test(n.nodeName)) {\n            return;\n          }\n          if (n.nodeType === 3 && n.nodeValue) {\n            text += n.nodeValue;\n          } else if (n.nodeType === 1) {\n            text += $(n).text();\n          }\n          return $textNode = $(n);\n        });\n        isFF = _this.editor.util.browser.firefox && !$textNode.next('br').length;\n        if ($textNode && text.length === 1 && isFF) {\n          $br = $(_this.editor.util.phBr).insertAfter($textNode);\n          $textNode.remove();\n          _this.editor.selection.setRangeBefore($br);\n          return true;\n        } else if (text.length > 0) {\n          return false;\n        }\n        range = document.createRange();\n        $prevChildList = $prevNode.children('ul, ol');\n        if ($prevChildList.length > 0) {\n          $newLi = $('<li/>').append(_this.editor.util.phBr).appendTo($prevChildList);\n          $prevChildList.append($childList.children('li'));\n          $node.remove();\n          _this.editor.selection.setRangeAtEndOf($newLi, range);\n        } else {\n          _this.editor.selection.setRangeAtEndOf($prevNode, range);\n          $prevNode.append($childList);\n          $node.remove();\n          _this.editor.selection.range(range);\n        }\n        return true;\n      };\n    })(this));\n    this.add('backspace', 'pre', (function(_this) {\n      return function(e, $node) {\n        var $newNode, codeStr, range;\n        if (!_this.editor.selection.rangeAtStartOf($node)) {\n          return;\n        }\n        codeStr = $node.html().replace('\\n', '<br/>') || _this.editor.util.phBr;\n        $newNode = $('<p/>').append(codeStr).insertAfter($node);\n        $node.remove();\n        range = document.createRange();\n        _this.editor.selection.setRangeAtStartOf($newNode, range);\n        return true;\n      };\n    })(this));\n    return this.add('backspace', 'blockquote', (function(_this) {\n      return function(e, $node) {\n        var $firstChild, range;\n        if (!_this.editor.selection.rangeAtStartOf($node)) {\n          return;\n        }\n        $firstChild = $node.children().first().unwrap();\n        range = document.createRange();\n        _this.editor.selection.setRangeAtStartOf($firstChild, range);\n        return true;\n      };\n    })(this));\n  };\n\n  return Keystroke;\n\n})(SimpleModule);\n\nUndoManager = (function(superClass) {\n  extend(UndoManager, superClass);\n\n  function UndoManager() {\n    return UndoManager.__super__.constructor.apply(this, arguments);\n  }\n\n  UndoManager.pluginName = 'UndoManager';\n\n  UndoManager.prototype._index = -1;\n\n  UndoManager.prototype._capacity = 20;\n\n  UndoManager.prototype._startPosition = null;\n\n  UndoManager.prototype._endPosition = null;\n\n  UndoManager.prototype._init = function() {\n    var redoShortcut, undoShortcut;\n    this.editor = this._module;\n    this._stack = [];\n    if (this.editor.util.os.mac) {\n      undoShortcut = 'cmd+z';\n      redoShortcut = 'shift+cmd+z';\n    } else if (this.editor.util.os.win) {\n      undoShortcut = 'ctrl+z';\n      redoShortcut = 'ctrl+y';\n    } else {\n      undoShortcut = 'ctrl+z';\n      redoShortcut = 'shift+ctrl+z';\n    }\n    this.editor.hotkeys.add(undoShortcut, (function(_this) {\n      return function(e) {\n        e.preventDefault();\n        _this.undo();\n        return false;\n      };\n    })(this));\n    this.editor.hotkeys.add(redoShortcut, (function(_this) {\n      return function(e) {\n        e.preventDefault();\n        _this.redo();\n        return false;\n      };\n    })(this));\n    this.throttledPushState = this.editor.util.throttle((function(_this) {\n      return function() {\n        return _this._pushUndoState();\n      };\n    })(this), 2000);\n    this.editor.on('valuechanged', (function(_this) {\n      return function(e, src) {\n        if (src === 'undo' || src === 'redo') {\n          return;\n        }\n        return _this.throttledPushState();\n      };\n    })(this));\n    this.editor.on('selectionchanged', (function(_this) {\n      return function(e) {\n        _this.resetCaretPosition();\n        return _this.update();\n      };\n    })(this));\n    this.editor.on('focus', (function(_this) {\n      return function(e) {\n        if (_this._stack.length === 0) {\n          return _this._pushUndoState();\n        }\n      };\n    })(this));\n    return this.editor.on('blur', (function(_this) {\n      return function(e) {\n        return _this.resetCaretPosition();\n      };\n    })(this));\n  };\n\n  UndoManager.prototype.resetCaretPosition = function() {\n    this._startPosition = null;\n    return this._endPosition = null;\n  };\n\n  UndoManager.prototype.startPosition = function() {\n    if (this.editor.selection._range) {\n      this._startPosition || (this._startPosition = this._getPosition('start'));\n    }\n    return this._startPosition;\n  };\n\n  UndoManager.prototype.endPosition = function() {\n    if (this.editor.selection._range) {\n      this._endPosition || (this._endPosition = (function(_this) {\n        return function() {\n          var range;\n          range = _this.editor.selection.range();\n          if (range.collapsed) {\n            return _this._startPosition;\n          }\n          return _this._getPosition('end');\n        };\n      })(this)());\n    }\n    return this._endPosition;\n  };\n\n  UndoManager.prototype._pushUndoState = function() {\n    var caret;\n    if (this.editor.triggerHandler('pushundostate') === false) {\n      return;\n    }\n    caret = this.caretPosition();\n    if (!caret.start) {\n      return;\n    }\n    this._index += 1;\n    this._stack.length = this._index;\n    this._stack.push({\n      html: this.editor.body.html(),\n      caret: this.caretPosition()\n    });\n    if (this._stack.length > this._capacity) {\n      this._stack.shift();\n      return this._index -= 1;\n    }\n  };\n\n  UndoManager.prototype.currentState = function() {\n    if (this._stack.length && this._index > -1) {\n      return this._stack[this._index];\n    } else {\n      return null;\n    }\n  };\n\n  UndoManager.prototype.undo = function() {\n    var state;\n    if (this._index < 1 || this._stack.length < 2) {\n      return;\n    }\n    this.editor.hidePopover();\n    this._index -= 1;\n    state = this._stack[this._index];\n    this.editor.body.get(0).innerHTML = state.html;\n    this.caretPosition(state.caret);\n    this.editor.body.find('.selected').removeClass('selected');\n    this.editor.sync();\n    return this.editor.trigger('valuechanged', ['undo']);\n  };\n\n  UndoManager.prototype.redo = function() {\n    var state;\n    if (this._index < 0 || this._stack.length < this._index + 2) {\n      return;\n    }\n    this.editor.hidePopover();\n    this._index += 1;\n    state = this._stack[this._index];\n    this.editor.body.get(0).innerHTML = state.html;\n    this.caretPosition(state.caret);\n    this.editor.body.find('.selected').removeClass('selected');\n    this.editor.sync();\n    return this.editor.trigger('valuechanged', ['redo']);\n  };\n\n  UndoManager.prototype.update = function() {\n    var currentState;\n    currentState = this.currentState();\n    if (!currentState) {\n      return;\n    }\n    currentState.html = this.editor.body.html();\n    return currentState.caret = this.caretPosition();\n  };\n\n  UndoManager.prototype._getNodeOffset = function(node, index) {\n    var $parent, merging, offset;\n    if ($.isNumeric(index)) {\n      $parent = $(node);\n    } else {\n      $parent = $(node).parent();\n    }\n    offset = 0;\n    merging = false;\n    $parent.contents().each(function(i, child) {\n      if (node === child || (index === i && i === 0)) {\n        return false;\n      }\n      if (child.nodeType === Node.TEXT_NODE) {\n        if (!merging && child.nodeValue.length > 0) {\n          offset += 1;\n          merging = true;\n        }\n      } else {\n        offset += 1;\n        merging = false;\n      }\n      if (index - 1 === i) {\n        return false;\n      }\n      return null;\n    });\n    return offset;\n  };\n\n  UndoManager.prototype._getPosition = function(type) {\n    var $nodes, node, nodes, offset, position, prevNode, range;\n    if (type == null) {\n      type = 'start';\n    }\n    range = this.editor.selection.range();\n    offset = range[type + \"Offset\"];\n    $nodes = this.editor.selection[type + \"Nodes\"]();\n    node = $nodes.first()[0];\n    if (node.nodeType === Node.TEXT_NODE) {\n      prevNode = node.previousSibling;\n      while (prevNode && prevNode.nodeType === Node.TEXT_NODE) {\n        node = prevNode;\n        offset += this.editor.util.getNodeLength(prevNode);\n        prevNode = prevNode.previousSibling;\n      }\n      nodes = $nodes.get();\n      nodes[0] = node;\n      $nodes = $(nodes);\n    } else {\n      offset = this._getNodeOffset(node, offset);\n    }\n    position = [offset];\n    $nodes.each((function(_this) {\n      return function(i, node) {\n        return position.unshift(_this._getNodeOffset(node));\n      };\n    })(this));\n    return position;\n  };\n\n  UndoManager.prototype._getNodeByPosition = function(position) {\n    var child, childNodes, i, k, len, node, offset, ref;\n    node = this.editor.body[0];\n    ref = position.slice(0, position.length - 1);\n    for (i = k = 0, len = ref.length; k < len; i = ++k) {\n      offset = ref[i];\n      childNodes = node.childNodes;\n      if (offset > childNodes.length - 1) {\n        if (i === position.length - 2 && $(node).is('pre:empty')) {\n          child = document.createTextNode('');\n          node.appendChild(child);\n          childNodes = node.childNodes;\n        } else {\n          node = null;\n          break;\n        }\n      }\n      node = childNodes[offset];\n    }\n    return node;\n  };\n\n  UndoManager.prototype.caretPosition = function(caret) {\n    var endContainer, endOffset, range, startContainer, startOffset;\n    if (!caret) {\n      range = this.editor.selection.range();\n      caret = this.editor.inputManager.focused && (range != null) ? {\n        start: this.startPosition(),\n        end: this.endPosition(),\n        collapsed: range.collapsed\n      } : {};\n      return caret;\n    } else {\n      if (!caret.start) {\n        return;\n      }\n      startContainer = this._getNodeByPosition(caret.start);\n      startOffset = caret.start[caret.start.length - 1];\n      if (caret.collapsed) {\n        endContainer = startContainer;\n        endOffset = startOffset;\n      } else {\n        endContainer = this._getNodeByPosition(caret.end);\n        endOffset = caret.start[caret.start.length - 1];\n      }\n      if (!startContainer || !endContainer) {\n        if (typeof console !== \"undefined\" && console !== null) {\n          if (typeof console.warn === \"function\") {\n            console.warn('simditor: invalid caret state');\n          }\n        }\n        return;\n      }\n      range = document.createRange();\n      range.setStart(startContainer, startOffset);\n      range.setEnd(endContainer, endOffset);\n      return this.editor.selection.range(range);\n    }\n  };\n\n  return UndoManager;\n\n})(SimpleModule);\n\nUtil = (function(superClass) {\n  extend(Util, superClass);\n\n  function Util() {\n    return Util.__super__.constructor.apply(this, arguments);\n  }\n\n  Util.pluginName = 'Util';\n\n  Util.prototype._init = function() {\n    this.editor = this._module;\n    if (this.browser.msie && this.browser.version < 11) {\n      return this.phBr = '';\n    }\n  };\n\n  Util.prototype.phBr = '<br/>';\n\n  Util.prototype.os = (function() {\n    var os;\n    os = {};\n    if (/Mac/.test(navigator.appVersion)) {\n      os.mac = true;\n    } else if (/Linux/.test(navigator.appVersion)) {\n      os.linux = true;\n    } else if (/Win/.test(navigator.appVersion)) {\n      os.win = true;\n    } else if (/X11/.test(navigator.appVersion)) {\n      os.unix = true;\n    }\n    if (/Mobi/.test(navigator.appVersion)) {\n      os.mobile = true;\n    }\n    return os;\n  })();\n\n  Util.prototype.browser = (function() {\n    var chrome, edge, firefox, ie, ref, ref1, ref2, ref3, ref4, safari, ua;\n    ua = navigator.userAgent;\n    ie = /(msie|trident)/i.test(ua);\n    chrome = /chrome|crios/i.test(ua);\n    safari = /safari/i.test(ua) && !chrome;\n    firefox = /firefox/i.test(ua);\n    edge = /edge/i.test(ua);\n    if (ie) {\n      return {\n        msie: true,\n        version: ((ref = ua.match(/(msie |rv:)(\\d+(\\.\\d+)?)/i)) != null ? ref[2] : void 0) * 1\n      };\n    } else if (edge) {\n      return {\n        edge: true,\n        webkit: true,\n        version: ((ref1 = ua.match(/edge\\/(\\d+(\\.\\d+)?)/i)) != null ? ref1[1] : void 0) * 1\n      };\n    } else if (chrome) {\n      return {\n        webkit: true,\n        chrome: true,\n        version: ((ref2 = ua.match(/(?:chrome|crios)\\/(\\d+(\\.\\d+)?)/i)) != null ? ref2[1] : void 0) * 1\n      };\n    } else if (safari) {\n      return {\n        webkit: true,\n        safari: true,\n        version: ((ref3 = ua.match(/version\\/(\\d+(\\.\\d+)?)/i)) != null ? ref3[1] : void 0) * 1\n      };\n    } else if (firefox) {\n      return {\n        mozilla: true,\n        firefox: true,\n        version: ((ref4 = ua.match(/firefox\\/(\\d+(\\.\\d+)?)/i)) != null ? ref4[1] : void 0) * 1\n      };\n    } else {\n      return {};\n    }\n  })();\n\n  Util.prototype.support = (function() {\n    return {\n      onselectionchange: (function() {\n        var e, onselectionchange;\n        onselectionchange = document.onselectionchange;\n        if (onselectionchange !== void 0) {\n          try {\n            document.onselectionchange = 0;\n            return document.onselectionchange === null;\n          } catch (_error) {\n            e = _error;\n          } finally {\n            document.onselectionchange = onselectionchange;\n          }\n        }\n        return false;\n      })(),\n      oninput: (function() {\n        return !/(msie|trident)/i.test(navigator.userAgent);\n      })()\n    };\n  })();\n\n  Util.prototype.reflow = function(el) {\n    if (el == null) {\n      el = document;\n    }\n    return $(el)[0].offsetHeight;\n  };\n\n  Util.prototype.metaKey = function(e) {\n    var isMac;\n    isMac = /Mac/.test(navigator.userAgent);\n    if (isMac) {\n      return e.metaKey;\n    } else {\n      return e.ctrlKey;\n    }\n  };\n\n  Util.prototype.isEmptyNode = function(node) {\n    var $node;\n    $node = $(node);\n    return $node.is(':empty') || (!$node.text() && !$node.find(':not(br, span, div)').length);\n  };\n\n  Util.prototype.isDecoratedNode = function(node) {\n    return $(node).is('[class^=\"simditor-\"]');\n  };\n\n  Util.prototype.blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\n\n  Util.prototype.isBlockNode = function(node) {\n    node = $(node)[0];\n    if (!node || node.nodeType === 3) {\n      return false;\n    }\n    return new RegExp(\"^(\" + (this.blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\n  };\n\n  Util.prototype.getNodeLength = function(node) {\n    node = $(node)[0];\n    switch (node.nodeType) {\n      case 7:\n      case 10:\n        return 0;\n      case 3:\n      case 8:\n        return node.length;\n      default:\n        return node.childNodes.length;\n    }\n  };\n\n  Util.prototype.dataURLtoBlob = function(dataURL) {\n    var BlobBuilder, arrayBuffer, bb, blobArray, byteString, hasArrayBufferViewSupport, hasBlobConstructor, i, intArray, k, mimeString, ref, supportBlob;\n    hasBlobConstructor = window.Blob && (function() {\n      var e;\n      try {\n        return Boolean(new Blob());\n      } catch (_error) {\n        e = _error;\n        return false;\n      }\n    })();\n    hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && (function() {\n      var e;\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100;\n      } catch (_error) {\n        e = _error;\n        return false;\n      }\n    })();\n    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n    supportBlob = hasBlobConstructor || BlobBuilder;\n    if (!(supportBlob && window.atob && window.ArrayBuffer && window.Uint8Array)) {\n      return false;\n    }\n    if (dataURL.split(',')[0].indexOf('base64') >= 0) {\n      byteString = atob(dataURL.split(',')[1]);\n    } else {\n      byteString = decodeURIComponent(dataURL.split(',')[1]);\n    }\n    arrayBuffer = new ArrayBuffer(byteString.length);\n    intArray = new Uint8Array(arrayBuffer);\n    for (i = k = 0, ref = byteString.length; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n    mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0];\n    if (hasBlobConstructor) {\n      blobArray = hasArrayBufferViewSupport ? intArray : arrayBuffer;\n      return new Blob([blobArray], {\n        type: mimeString\n      });\n    }\n    bb = new BlobBuilder();\n    bb.append(arrayBuffer);\n    return bb.getBlob(mimeString);\n  };\n\n  Util.prototype.throttle = function(func, wait) {\n    var args, call, ctx, last, rtn, throttled, timeoutID;\n    last = 0;\n    timeoutID = 0;\n    ctx = args = rtn = null;\n    call = function() {\n      timeoutID = 0;\n      last = +new Date();\n      rtn = func.apply(ctx, args);\n      ctx = null;\n      return args = null;\n    };\n    throttled = function() {\n      var delta;\n      ctx = this;\n      args = arguments;\n      delta = new Date() - last;\n      if (!timeoutID) {\n        if (delta >= wait) {\n          call();\n        } else {\n          timeoutID = setTimeout(call, wait - delta);\n        }\n      }\n      return rtn;\n    };\n    throttled.clear = function() {\n      if (!timeoutID) {\n        return;\n      }\n      clearTimeout(timeoutID);\n      return call();\n    };\n    return throttled;\n  };\n\n  Util.prototype.formatHTML = function(html) {\n    var cursor, indentString, lastMatch, level, match, re, repeatString, result, str;\n    re = /<(\\/?)(.+?)(\\/?)>/g;\n    result = '';\n    level = 0;\n    lastMatch = null;\n    indentString = '  ';\n    repeatString = function(str, n) {\n      return new Array(n + 1).join(str);\n    };\n    while ((match = re.exec(html)) !== null) {\n      match.isBlockNode = $.inArray(match[2], this.blockNodes) > -1;\n      match.isStartTag = match[1] !== '/' && match[3] !== '/';\n      match.isEndTag = match[1] === '/' || match[3] === '/';\n      cursor = lastMatch ? lastMatch.index + lastMatch[0].length : 0;\n      if ((str = html.substring(cursor, match.index)).length > 0 && $.trim(str)) {\n        result += str;\n      }\n      if (match.isBlockNode && match.isEndTag && !match.isStartTag) {\n        level -= 1;\n      }\n      if (match.isBlockNode && match.isStartTag) {\n        if (!(lastMatch && lastMatch.isBlockNode && lastMatch.isEndTag)) {\n          result += '\\n';\n        }\n        result += repeatString(indentString, level);\n      }\n      result += match[0];\n      if (match.isBlockNode && match.isEndTag) {\n        result += '\\n';\n      }\n      if (match.isBlockNode && match.isStartTag) {\n        level += 1;\n      }\n      lastMatch = match;\n    }\n    return $.trim(result);\n  };\n\n  return Util;\n\n})(SimpleModule);\n\nToolbar = (function(superClass) {\n  extend(Toolbar, superClass);\n\n  function Toolbar() {\n    return Toolbar.__super__.constructor.apply(this, arguments);\n  }\n\n  Toolbar.pluginName = 'Toolbar';\n\n  Toolbar.prototype.opts = {\n    toolbar: true,\n    toolbarFloat: true,\n    toolbarHidden: false,\n    toolbarFloatOffset: 0\n  };\n\n  Toolbar.prototype._tpl = {\n    wrapper: '<div class=\"simditor-toolbar\"><ul></ul></div>',\n    separator: '<li><span class=\"separator\"></span></li>'\n  };\n\n  Toolbar.prototype._init = function() {\n    var floatInitialized, initToolbarFloat, toolbarHeight;\n    this.editor = this._module;\n    if (!this.opts.toolbar) {\n      return;\n    }\n    if (!$.isArray(this.opts.toolbar)) {\n      this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\n    }\n    this._render();\n    this.list.on('click', function(e) {\n      return false;\n    });\n    this.wrapper.on('mousedown', (function(_this) {\n      return function(e) {\n        return _this.list.find('.menu-on').removeClass('.menu-on');\n      };\n    })(this));\n    $(document).on('mousedown.simditor' + this.editor.id, (function(_this) {\n      return function(e) {\n        return _this.list.find('.menu-on').removeClass('.menu-on');\n      };\n    })(this));\n    if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\n      this.wrapper.css('top', this.opts.toolbarFloatOffset);\n      toolbarHeight = 0;\n      initToolbarFloat = (function(_this) {\n        return function() {\n          _this.wrapper.css('position', 'static');\n          _this.wrapper.width('auto');\n          _this.editor.util.reflow(_this.wrapper);\n          _this.wrapper.width(_this.wrapper.outerWidth());\n          _this.wrapper.css('left', _this.editor.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\n          _this.wrapper.css('position', '');\n          toolbarHeight = _this.wrapper.outerHeight();\n          _this.editor.placeholderEl.css('top', toolbarHeight);\n          return true;\n        };\n      })(this);\n      floatInitialized = null;\n      $(window).on('resize.simditor-' + this.editor.id, function(e) {\n        return floatInitialized = initToolbarFloat();\n      });\n      $(window).on('scroll.simditor-' + this.editor.id, (function(_this) {\n        return function(e) {\n          var bottomEdge, scrollTop, topEdge;\n          if (!_this.wrapper.is(':visible')) {\n            return;\n          }\n          topEdge = _this.editor.wrapper.offset().top;\n          bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\n          scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\n          if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\n            _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\n            if (_this.editor.util.os.mobile) {\n              return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\n            }\n          } else {\n            floatInitialized || (floatInitialized = initToolbarFloat());\n            _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\n            if (_this.editor.util.os.mobile) {\n              return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\n            }\n          }\n        };\n      })(this));\n    }\n    this.editor.on('destroy', (function(_this) {\n      return function() {\n        return _this.buttons.length = 0;\n      };\n    })(this));\n    return $(document).on(\"mousedown.simditor-\" + this.editor.id, (function(_this) {\n      return function(e) {\n        return _this.list.find('li.menu-on').removeClass('menu-on');\n      };\n    })(this));\n  };\n\n  Toolbar.prototype._render = function() {\n    var k, len, name, ref;\n    this.buttons = [];\n    this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\n    this.list = this.wrapper.find('ul');\n    ref = this.opts.toolbar;\n    for (k = 0, len = ref.length; k < len; k++) {\n      name = ref[k];\n      if (name === '|') {\n        $(this._tpl.separator).appendTo(this.list);\n        continue;\n      }\n      if (!this.constructor.buttons[name]) {\n        throw new Error(\"simditor: invalid toolbar button \" + name);\n        continue;\n      }\n      this.buttons.push(new this.constructor.buttons[name]({\n        editor: this.editor\n      }));\n    }\n    if (this.opts.toolbarHidden) {\n      return this.wrapper.hide();\n    }\n  };\n\n  Toolbar.prototype.findButton = function(name) {\n    var button;\n    button = this.list.find('.toolbar-item-' + name).data('button');\n    return button != null ? button : null;\n  };\n\n  Toolbar.addButton = function(btn) {\n    return this.buttons[btn.prototype.name] = btn;\n  };\n\n  Toolbar.buttons = {};\n\n  return Toolbar;\n\n})(SimpleModule);\n\nIndentation = (function(superClass) {\n  extend(Indentation, superClass);\n\n  function Indentation() {\n    return Indentation.__super__.constructor.apply(this, arguments);\n  }\n\n  Indentation.pluginName = 'Indentation';\n\n  Indentation.prototype.opts = {\n    tabIndent: true\n  };\n\n  Indentation.prototype._init = function() {\n    this.editor = this._module;\n    return this.editor.keystroke.add('tab', '*', (function(_this) {\n      return function(e) {\n        var codeButton;\n        codeButton = _this.editor.toolbar.findButton('code');\n        if (!(_this.opts.tabIndent || (codeButton && codeButton.active))) {\n          return;\n        }\n        return _this.indent(e.shiftKey);\n      };\n    })(this));\n  };\n\n  Indentation.prototype.indent = function(isBackward) {\n    var $blockNodes, $endNodes, $startNodes, nodes, result;\n    $startNodes = this.editor.selection.startNodes();\n    $endNodes = this.editor.selection.endNodes();\n    $blockNodes = this.editor.selection.blockNodes();\n    nodes = [];\n    $blockNodes = $blockNodes.each(function(i, node) {\n      var include, j, k, len, n;\n      include = true;\n      for (j = k = 0, len = nodes.length; k < len; j = ++k) {\n        n = nodes[j];\n        if ($.contains(node, n)) {\n          include = false;\n          break;\n        } else if ($.contains(n, node)) {\n          nodes.splice(j, 1, node);\n          include = false;\n          break;\n        }\n      }\n      if (include) {\n        return nodes.push(node);\n      }\n    });\n    $blockNodes = $(nodes);\n    result = false;\n    $blockNodes.each((function(_this) {\n      return function(i, blockEl) {\n        var r;\n        r = isBackward ? _this.outdentBlock(blockEl) : _this.indentBlock(blockEl);\n        if (r) {\n          return result = r;\n        }\n      };\n    })(this));\n    return result;\n  };\n\n  Indentation.prototype.indentBlock = function(blockEl) {\n    var $blockEl, $childList, $nextTd, $nextTr, $parentLi, $pre, $td, $tr, marginLeft, tagName;\n    $blockEl = $(blockEl);\n    if (!$blockEl.length) {\n      return;\n    }\n    if ($blockEl.is('pre')) {\n      $pre = this.editor.selection.containerNode();\n      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {\n        return;\n      }\n      this.indentText(this.editor.selection.range());\n    } else if ($blockEl.is('li')) {\n      $parentLi = $blockEl.prev('li');\n      if ($parentLi.length < 1) {\n        return;\n      }\n      this.editor.selection.save();\n      tagName = $blockEl.parent()[0].tagName;\n      $childList = $parentLi.children('ul, ol');\n      if ($childList.length > 0) {\n        $childList.append($blockEl);\n      } else {\n        $('<' + tagName + '/>').append($blockEl).appendTo($parentLi);\n      }\n      this.editor.selection.restore();\n    } else if ($blockEl.is('p, h1, h2, h3, h4')) {\n      marginLeft = parseInt($blockEl.css('margin-left')) || 0;\n      marginLeft = (Math.round(marginLeft / this.opts.indentWidth) + 1) * this.opts.indentWidth;\n      $blockEl.css('margin-left', marginLeft);\n    } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {\n      $td = this.editor.selection.containerNode().closest('td, th');\n      $nextTd = $td.next('td, th');\n      if (!($nextTd.length > 0)) {\n        $tr = $td.parent('tr');\n        $nextTr = $tr.next('tr');\n        if ($nextTr.length < 1 && $tr.parent().is('thead')) {\n          $nextTr = $tr.parent('thead').next('tbody').find('tr:first');\n        }\n        $nextTd = $nextTr.find('td:first, th:first');\n      }\n      if (!($td.length > 0 && $nextTd.length > 0)) {\n        return;\n      }\n      this.editor.selection.setRangeAtEndOf($nextTd);\n    } else {\n      return false;\n    }\n    return true;\n  };\n\n  Indentation.prototype.indentText = function(range) {\n    var text, textNode;\n    text = range.toString().replace(/^(?=.+)/mg, '\\u00A0\\u00A0');\n    textNode = document.createTextNode(text || '\\u00A0\\u00A0');\n    range.deleteContents();\n    range.insertNode(textNode);\n    if (text) {\n      range.selectNode(textNode);\n      return this.editor.selection.range(range);\n    } else {\n      return this.editor.selection.setRangeAfter(textNode);\n    }\n  };\n\n  Indentation.prototype.outdentBlock = function(blockEl) {\n    var $blockEl, $parent, $parentLi, $pre, $prevTd, $prevTr, $td, $tr, marginLeft, range;\n    $blockEl = $(blockEl);\n    if (!($blockEl && $blockEl.length > 0)) {\n      return;\n    }\n    if ($blockEl.is('pre')) {\n      $pre = this.editor.selection.containerNode();\n      if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {\n        return;\n      }\n      this.outdentText(range);\n    } else if ($blockEl.is('li')) {\n      $parent = $blockEl.parent();\n      $parentLi = $parent.parent('li');\n      this.editor.selection.save();\n      if ($parentLi.length < 1) {\n        range = document.createRange();\n        range.setStartBefore($parent[0]);\n        range.setEndBefore($blockEl[0]);\n        $parent.before(range.extractContents());\n        $('<p/>').insertBefore($parent).after($blockEl.children('ul, ol')).append($blockEl.contents());\n        $blockEl.remove();\n      } else {\n        if ($blockEl.next('li').length > 0) {\n          $('<' + $parent[0].tagName + '/>').append($blockEl.nextAll('li')).appendTo($blockEl);\n        }\n        $blockEl.insertAfter($parentLi);\n        if ($parent.children('li').length < 1) {\n          $parent.remove();\n        }\n      }\n      this.editor.selection.restore();\n    } else if ($blockEl.is('p, h1, h2, h3, h4')) {\n      marginLeft = parseInt($blockEl.css('margin-left')) || 0;\n      marginLeft = Math.max(Math.round(marginLeft / this.opts.indentWidth) - 1, 0) * this.opts.indentWidth;\n      $blockEl.css('margin-left', marginLeft === 0 ? '' : marginLeft);\n    } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {\n      $td = this.editor.selection.containerNode().closest('td, th');\n      $prevTd = $td.prev('td, th');\n      if (!($prevTd.length > 0)) {\n        $tr = $td.parent('tr');\n        $prevTr = $tr.prev('tr');\n        if ($prevTr.length < 1 && $tr.parent().is('tbody')) {\n          $prevTr = $tr.parent('tbody').prev('thead').find('tr:first');\n        }\n        $prevTd = $prevTr.find('td:last, th:last');\n      }\n      if (!($td.length > 0 && $prevTd.length > 0)) {\n        return;\n      }\n      this.editor.selection.setRangeAtEndOf($prevTd);\n    } else {\n      return false;\n    }\n    return true;\n  };\n\n  Indentation.prototype.outdentText = function(range) {};\n\n  return Indentation;\n\n})(SimpleModule);\n\nClipboard = (function(superClass) {\n  extend(Clipboard, superClass);\n\n  function Clipboard() {\n    return Clipboard.__super__.constructor.apply(this, arguments);\n  }\n\n  Clipboard.pluginName = 'Clipboard';\n\n  Clipboard.prototype.opts = {\n    pasteImage: false,\n    cleanPaste: false\n  };\n\n  Clipboard.prototype._init = function() {\n    this.editor = this._module;\n    if (this.opts.pasteImage && typeof this.opts.pasteImage !== 'string') {\n      this.opts.pasteImage = 'inline';\n    }\n    return this.editor.body.on('paste', (function(_this) {\n      return function(e) {\n        var range;\n        if (_this.pasting || _this._pasteBin) {\n          return;\n        }\n        if (_this.editor.triggerHandler(e) === false) {\n          return false;\n        }\n        range = _this.editor.selection.deleteRangeContents();\n        if (_this.editor.body.html()) {\n          if (!range.collapsed) {\n            range.collapse(true);\n          }\n        } else {\n          _this.editor.formatter.format();\n          _this.editor.selection.setRangeAtStartOf(_this.editor.body.find('p:first'));\n        }\n        if (_this._processPasteByClipboardApi(e)) {\n          return false;\n        }\n        _this.editor.inputManager.throttledValueChanged.clear();\n        _this.editor.inputManager.throttledSelectionChanged.clear();\n        _this.editor.undoManager.throttledPushState.clear();\n        _this.editor.selection.reset();\n        _this.editor.undoManager.resetCaretPosition();\n        _this.pasting = true;\n        return _this._getPasteContent(function(pasteContent) {\n          _this._processPasteContent(pasteContent);\n          _this._pasteInBlockEl = null;\n          _this._pastePlainText = null;\n          return _this.pasting = false;\n        });\n      };\n    })(this));\n  };\n\n  Clipboard.prototype._processPasteByClipboardApi = function(e) {\n    var imageFile, pasteItem, ref, uploadOpt;\n    if (this.editor.util.browser.edge) {\n      return;\n    }\n    if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.items && e.originalEvent.clipboardData.items.length > 0) {\n      pasteItem = e.originalEvent.clipboardData.items[0];\n      if (/^image\\//.test(pasteItem.type)) {\n        imageFile = pasteItem.getAsFile();\n        if (!((imageFile != null) && this.opts.pasteImage)) {\n          return;\n        }\n        if (!imageFile.name) {\n          imageFile.name = \"Clipboard Image.png\";\n        }\n        if (this.editor.triggerHandler('pasting', [imageFile]) === false) {\n          return;\n        }\n        uploadOpt = {};\n        uploadOpt[this.opts.pasteImage] = true;\n        if ((ref = this.editor.uploader) != null) {\n          ref.upload(imageFile, uploadOpt);\n        }\n        return true;\n      }\n    }\n  };\n\n  Clipboard.prototype._getPasteContent = function(callback) {\n    var state;\n    this._pasteBin = $('<div contenteditable=\"true\" />').addClass('simditor-paste-bin').attr('tabIndex', '-1').appendTo(this.editor.el);\n    state = {\n      html: this.editor.body.html(),\n      caret: this.editor.undoManager.caretPosition()\n    };\n    this._pasteBin.focus();\n    return setTimeout((function(_this) {\n      return function() {\n        var pasteContent;\n        _this.editor.hidePopover();\n        _this.editor.body.get(0).innerHTML = state.html;\n        _this.editor.undoManager.caretPosition(state.caret);\n        _this.editor.body.focus();\n        _this.editor.selection.reset();\n        _this.editor.selection.range();\n        _this._pasteInBlockEl = _this.editor.selection.blockNodes().last();\n        _this._pastePlainText = _this.opts.cleanPaste || _this._pasteInBlockEl.is('pre, table');\n        if (_this._pastePlainText) {\n          pasteContent = _this.editor.formatter.clearHtml(_this._pasteBin.html(), true);\n        } else {\n          pasteContent = $('<div/>').append(_this._pasteBin.contents());\n          pasteContent.find('table colgroup').remove();\n          _this.editor.formatter.format(pasteContent);\n          _this.editor.formatter.decorate(pasteContent);\n          _this.editor.formatter.beautify(pasteContent.children());\n          pasteContent = pasteContent.contents();\n        }\n        _this._pasteBin.remove();\n        _this._pasteBin = null;\n        return callback(pasteContent);\n      };\n    })(this), 0);\n  };\n\n  Clipboard.prototype._processPasteContent = function(pasteContent) {\n    var $blockEl, $img, blob, children, insertPosition, k, l, lastLine, len, len1, len2, len3, len4, line, lines, m, node, o, q, ref, ref1, ref2, uploadOpt;\n    if (this.editor.triggerHandler('pasting', [pasteContent]) === false) {\n      return;\n    }\n    $blockEl = this._pasteInBlockEl;\n    if (!pasteContent) {\n      return;\n    } else if (this._pastePlainText) {\n      if ($blockEl.is('table')) {\n        lines = pasteContent.split('\\n');\n        lastLine = lines.pop();\n        for (k = 0, len = lines.length; k < len; k++) {\n          line = lines[k];\n          this.editor.selection.insertNode(document.createTextNode(line));\n          this.editor.selection.insertNode($('<br/>'));\n        }\n        this.editor.selection.insertNode(document.createTextNode(lastLine));\n      } else {\n        pasteContent = $('<div/>').text(pasteContent);\n        ref = pasteContent.contents();\n        for (l = 0, len1 = ref.length; l < len1; l++) {\n          node = ref[l];\n          this.editor.selection.insertNode($(node)[0]);\n        }\n      }\n    } else if ($blockEl.is(this.editor.body)) {\n      for (m = 0, len2 = pasteContent.length; m < len2; m++) {\n        node = pasteContent[m];\n        this.editor.selection.insertNode(node);\n      }\n    } else if (pasteContent.length < 1) {\n      return;\n    } else if (pasteContent.length === 1) {\n      if (pasteContent.is('p')) {\n        children = pasteContent.contents();\n        if (children.length === 1 && children.is('img')) {\n          $img = children;\n          if (/^data:image/.test($img.attr('src'))) {\n            if (!this.opts.pasteImage) {\n              return;\n            }\n            blob = this.editor.util.dataURLtoBlob($img.attr(\"src\"));\n            blob.name = \"Clipboard Image.png\";\n            uploadOpt = {};\n            uploadOpt[this.opts.pasteImage] = true;\n            if ((ref1 = this.editor.uploader) != null) {\n              ref1.upload(blob, uploadOpt);\n            }\n            return;\n          } else if ($img.is('img[src^=\"webkit-fake-url://\"]')) {\n            return;\n          }\n        }\n        for (o = 0, len3 = children.length; o < len3; o++) {\n          node = children[o];\n          this.editor.selection.insertNode(node);\n        }\n      } else if ($blockEl.is('p') && this.editor.util.isEmptyNode($blockEl)) {\n        $blockEl.replaceWith(pasteContent);\n        this.editor.selection.setRangeAtEndOf(pasteContent);\n      } else if (pasteContent.is('ul, ol')) {\n        if (pasteContent.find('li').length === 1) {\n          pasteContent = $('<div/>').text(pasteContent.text());\n          ref2 = pasteContent.contents();\n          for (q = 0, len4 = ref2.length; q < len4; q++) {\n            node = ref2[q];\n            this.editor.selection.insertNode($(node)[0]);\n          }\n        } else if ($blockEl.is('li')) {\n          $blockEl.parent().after(pasteContent);\n          this.editor.selection.setRangeAtEndOf(pasteContent);\n        } else {\n          $blockEl.after(pasteContent);\n          this.editor.selection.setRangeAtEndOf(pasteContent);\n        }\n      } else {\n        $blockEl.after(pasteContent);\n        this.editor.selection.setRangeAtEndOf(pasteContent);\n      }\n    } else {\n      if ($blockEl.is('li')) {\n        $blockEl = $blockEl.parent();\n      }\n      if (this.editor.selection.rangeAtStartOf($blockEl)) {\n        insertPosition = 'before';\n      } else if (this.editor.selection.rangeAtEndOf($blockEl)) {\n        insertPosition = 'after';\n      } else {\n        this.editor.selection.breakBlockEl($blockEl);\n        insertPosition = 'before';\n      }\n      $blockEl[insertPosition](pasteContent);\n      this.editor.selection.setRangeAtEndOf(pasteContent.last());\n    }\n    return this.editor.inputManager.throttledValueChanged();\n  };\n\n  return Clipboard;\n\n})(SimpleModule);\n\nSimditor = (function(superClass) {\n  extend(Simditor, superClass);\n\n  function Simditor() {\n    return Simditor.__super__.constructor.apply(this, arguments);\n  }\n\n  Simditor.connect(Util);\n\n  Simditor.connect(InputManager);\n\n  Simditor.connect(Selection);\n\n  Simditor.connect(UndoManager);\n\n  Simditor.connect(Keystroke);\n\n  Simditor.connect(Formatter);\n\n  Simditor.connect(Toolbar);\n\n  Simditor.connect(Indentation);\n\n  Simditor.connect(Clipboard);\n\n  Simditor.count = 0;\n\n  Simditor.prototype.opts = {\n    textarea: null,\n    placeholder: '',\n    defaultImage: 'images/image.png',\n    params: {},\n    upload: false,\n    indentWidth: 40\n  };\n\n  Simditor.prototype._init = function() {\n    var e, editor, form, uploadOpts;\n    this.textarea = $(this.opts.textarea);\n    this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n    if (!this.textarea.length) {\n      throw new Error('simditor: param textarea is required.');\n      return;\n    }\n    editor = this.textarea.data('simditor');\n    if (editor != null) {\n      editor.destroy();\n    }\n    this.id = ++Simditor.count;\n    this._render();\n    if (simpleHotkeys) {\n      this.hotkeys = simpleHotkeys({\n        el: this.body\n      });\n    } else {\n      throw new Error('simditor: simple-hotkeys is required.');\n      return;\n    }\n    if (this.opts.upload && simpleUploader) {\n      uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n      this.uploader = simpleUploader(uploadOpts);\n    }\n    form = this.textarea.closest('form');\n    if (form.length) {\n      form.on('submit.simditor-' + this.id, (function(_this) {\n        return function() {\n          return _this.sync();\n        };\n      })(this));\n      form.on('reset.simditor-' + this.id, (function(_this) {\n        return function() {\n          return _this.setValue('');\n        };\n      })(this));\n    }\n    this.on('initialized', (function(_this) {\n      return function() {\n        if (_this.opts.placeholder) {\n          _this.on('valuechanged', function() {\n            return _this._placeholder();\n          });\n        }\n        _this.setValue(_this.textarea.val().trim() || '');\n        if (_this.textarea.attr('autofocus')) {\n          return _this.focus();\n        }\n      };\n    })(this));\n    if (this.util.browser.mozilla) {\n      this.util.reflow();\n      try {\n        document.execCommand('enableObjectResizing', false, false);\n        return document.execCommand('enableInlineTableEditing', false, false);\n      } catch (_error) {\n        e = _error;\n      }\n    }\n  };\n\n  Simditor.prototype._tpl = \"<div class=\\\"simditor\\\">\\n  <div class=\\\"simditor-wrapper\\\">\\n    <div class=\\\"simditor-placeholder\\\"></div>\\n    <div class=\\\"simditor-body\\\" contenteditable=\\\"true\\\">\\n    </div>\\n  </div>\\n</div>\";\n\n  Simditor.prototype._render = function() {\n    var key, ref, results, val;\n    this.el = $(this._tpl).insertBefore(this.textarea);\n    this.wrapper = this.el.find('.simditor-wrapper');\n    this.body = this.wrapper.find('.simditor-body');\n    this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);\n    this.el.data('simditor', this);\n    this.wrapper.append(this.textarea);\n    this.textarea.data('simditor', this).blur();\n    this.body.attr('tabindex', this.textarea.attr('tabindex'));\n    if (this.util.os.mac) {\n      this.el.addClass('simditor-mac');\n    } else if (this.util.os.linux) {\n      this.el.addClass('simditor-linux');\n    }\n    if (this.util.os.mobile) {\n      this.el.addClass('simditor-mobile');\n    }\n    if (this.opts.params) {\n      ref = this.opts.params;\n      results = [];\n      for (key in ref) {\n        val = ref[key];\n        results.push($('<input/>', {\n          type: 'hidden',\n          name: key,\n          value: val\n        }).insertAfter(this.textarea));\n      }\n      return results;\n    }\n  };\n\n  Simditor.prototype._placeholder = function() {\n    var children;\n    children = this.body.children();\n    if (children.length === 0 || (children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth)) {\n      return this.placeholderEl.show();\n    } else {\n      return this.placeholderEl.hide();\n    }\n  };\n\n  Simditor.prototype.setValue = function(val) {\n    this.hidePopover();\n    this.textarea.val(val);\n    this.body.get(0).innerHTML = val;\n    this.formatter.format();\n    this.formatter.decorate();\n    this.util.reflow(this.body);\n    this.inputManager.lastCaretPosition = null;\n    return this.trigger('valuechanged');\n  };\n\n  Simditor.prototype.getValue = function() {\n    return this.sync();\n  };\n\n  Simditor.prototype.sync = function() {\n    var children, cloneBody, emptyP, firstP, lastP, val;\n    cloneBody = this.body.clone();\n    this.formatter.undecorate(cloneBody);\n    this.formatter.format(cloneBody);\n    this.formatter.autolink(cloneBody);\n    children = cloneBody.children();\n    lastP = children.last('p');\n    firstP = children.first('p');\n    while (lastP.is('p') && this.util.isEmptyNode(lastP)) {\n      emptyP = lastP;\n      lastP = lastP.prev('p');\n      emptyP.remove();\n    }\n    while (firstP.is('p') && this.util.isEmptyNode(firstP)) {\n      emptyP = firstP;\n      firstP = lastP.next('p');\n      emptyP.remove();\n    }\n    cloneBody.find('img.uploading').remove();\n    val = $.trim(cloneBody.html());\n    this.textarea.val(val);\n    return val;\n  };\n\n  Simditor.prototype.focus = function() {\n    var $blockEl, range;\n    if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\n      this.el.find('textarea:visible').focus();\n      return;\n    }\n    if (this.inputManager.lastCaretPosition) {\n      this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\n      return this.inputManager.lastCaretPosition = null;\n    } else {\n      $blockEl = this.body.children().last();\n      if (!$blockEl.is('p')) {\n        $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\n      }\n      range = document.createRange();\n      return this.selection.setRangeAtEndOf($blockEl, range);\n    }\n  };\n\n  Simditor.prototype.blur = function() {\n    if (this.body.is(':visible') && this.body.is('[contenteditable]')) {\n      return this.body.blur();\n    } else {\n      return this.body.find('textarea:visible').blur();\n    }\n  };\n\n  Simditor.prototype.hidePopover = function() {\n    return this.el.find('.simditor-popover').each(function(i, popover) {\n      popover = $(popover).data('popover');\n      if (popover.active) {\n        return popover.hide();\n      }\n    });\n  };\n\n  Simditor.prototype.destroy = function() {\n    this.triggerHandler('destroy');\n    this.textarea.closest('form').off('.simditor .simditor-' + this.id);\n    this.selection.clear();\n    this.inputManager.focused = false;\n    this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');\n    this.el.remove();\n    $(document).off('.simditor-' + this.id);\n    $(window).off('.simditor-' + this.id);\n    return this.off();\n  };\n\n  return Simditor;\n\n})(SimpleModule);\n\nSimditor.i18n = {\n  'zh-CN': {\n    'blockquote': '引用',\n    'bold': '加粗文字',\n    'code': '插入代码',\n    'color': '文字颜色',\n    'coloredText': '彩色文字',\n    'hr': '分隔线',\n    'image': '插入图片',\n    'externalImage': '外链图片',\n    'uploadImage': '上传图片',\n    'uploadFailed': '上传失败了',\n    'uploadError': '上传出错了',\n    'imageUrl': '图片地址',\n    'imageSize': '图片尺寸',\n    'imageAlt': '图片描述',\n    'restoreImageSize': '还原图片尺寸',\n    'uploading': '正在上传',\n    'indent': '向右缩进',\n    'outdent': '向左缩进',\n    'italic': '斜体文字',\n    'link': '插入链接',\n    'linkText': '链接文字',\n    'linkUrl': '链接地址',\n    'linkTarget': '打开方式',\n    'openLinkInCurrentWindow': '在新窗口中打开',\n    'openLinkInNewWindow': '在当前窗口中打开',\n    'removeLink': '移除链接',\n    'ol': '有序列表',\n    'ul': '无序列表',\n    'strikethrough': '删除线文字',\n    'table': '表格',\n    'deleteRow': '删除行',\n    'insertRowAbove': '在上面插入行',\n    'insertRowBelow': '在下面插入行',\n    'deleteColumn': '删除列',\n    'insertColumnLeft': '在左边插入列',\n    'insertColumnRight': '在右边插入列',\n    'deleteTable': '删除表格',\n    'title': '标题',\n    'normalText': '普通文本',\n    'underline': '下划线文字',\n    'alignment': '水平对齐',\n    'alignCenter': '居中',\n    'alignLeft': '居左',\n    'alignRight': '居右',\n    'selectLanguage': '选择程序语言',\n    'fontScale': '字体大小',\n    'fontScaleXLarge': '超大字体',\n    'fontScaleLarge': '大号字体',\n    'fontScaleNormal': '正常大小',\n    'fontScaleSmall': '小号字体',\n    'fontScaleXSmall': '超小字体'\n  },\n  'en-US': {\n    'blockquote': 'Block Quote',\n    'bold': 'Bold',\n    'code': 'Code',\n    'color': 'Text Color',\n    'coloredText': 'Colored Text',\n    'hr': 'Horizontal Line',\n    'image': 'Insert Image',\n    'externalImage': 'External Image',\n    'uploadImage': 'Upload Image',\n    'uploadFailed': 'Upload failed',\n    'uploadError': 'Error occurs during upload',\n    'imageUrl': 'Url',\n    'imageSize': 'Size',\n    'imageAlt': 'Alt',\n    'restoreImageSize': 'Restore Origin Size',\n    'uploading': 'Uploading',\n    'indent': 'Indent',\n    'outdent': 'Outdent',\n    'italic': 'Italic',\n    'link': 'Insert Link',\n    'linkText': 'Text',\n    'linkUrl': 'Url',\n    'linkTarget': 'Target',\n    'openLinkInCurrentWindow': 'Open link in current window',\n    'openLinkInNewWindow': 'Open link in new window',\n    'removeLink': 'Remove Link',\n    'ol': 'Ordered List',\n    'ul': 'Unordered List',\n    'strikethrough': 'Strikethrough',\n    'table': 'Table',\n    'deleteRow': 'Delete Row',\n    'insertRowAbove': 'Insert Row Above',\n    'insertRowBelow': 'Insert Row Below',\n    'deleteColumn': 'Delete Column',\n    'insertColumnLeft': 'Insert Column Left',\n    'insertColumnRight': 'Insert Column Right',\n    'deleteTable': 'Delete Table',\n    'title': 'Title',\n    'normalText': 'Text',\n    'underline': 'Underline',\n    'alignment': 'Alignment',\n    'alignCenter': 'Align Center',\n    'alignLeft': 'Align Left',\n    'alignRight': 'Align Right',\n    'selectLanguage': 'Select Language',\n    'fontScale': 'Font Size',\n    'fontScaleXLarge': 'X Large Size',\n    'fontScaleLarge': 'Large Size',\n    'fontScaleNormal': 'Normal Size',\n    'fontScaleSmall': 'Small Size',\n    'fontScaleXSmall': 'X Small Size'\n  }\n};\n\nButton = (function(superClass) {\n  extend(Button, superClass);\n\n  Button.prototype._tpl = {\n    item: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"toolbar-item\" href=\"javascript:;\"><span></span></a></li>',\n    menuWrapper: '<div class=\"toolbar-menu\"></div>',\n    menuItem: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\"><span></span></a></li>',\n    separator: '<li><span class=\"separator\"></span></li>'\n  };\n\n  Button.prototype.name = '';\n\n  Button.prototype.icon = '';\n\n  Button.prototype.title = '';\n\n  Button.prototype.text = '';\n\n  Button.prototype.htmlTag = '';\n\n  Button.prototype.disableTag = '';\n\n  Button.prototype.menu = false;\n\n  Button.prototype.active = false;\n\n  Button.prototype.disabled = false;\n\n  Button.prototype.needFocus = true;\n\n  Button.prototype.shortcut = null;\n\n  function Button(opts) {\n    this.editor = opts.editor;\n    this.title = this._t(this.name);\n    Button.__super__.constructor.call(this, opts);\n  }\n\n  Button.prototype._init = function() {\n    var k, len, ref, tag;\n    this.render();\n    this.el.on('mousedown', (function(_this) {\n      return function(e) {\n        var exceed, noFocus, param;\n        e.preventDefault();\n        noFocus = _this.needFocus && !_this.editor.inputManager.focused;\n        if (_this.el.hasClass('disabled') || noFocus) {\n          return false;\n        }\n        if (_this.menu) {\n          _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');\n          if (_this.wrapper.is('.menu-on')) {\n            exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();\n            if (exceed > 0) {\n              _this.menuWrapper.css({\n                'left': 'auto',\n                'right': 0\n              });\n            }\n            _this.trigger('menuexpand');\n          }\n          return false;\n        }\n        param = _this.el.data('param');\n        _this.command(param);\n        return false;\n      };\n    })(this));\n    this.wrapper.on('click', 'a.menu-item', (function(_this) {\n      return function(e) {\n        var btn, noFocus, param;\n        e.preventDefault();\n        btn = $(e.currentTarget);\n        _this.wrapper.removeClass('menu-on');\n        noFocus = _this.needFocus && !_this.editor.inputManager.focused;\n        if (btn.hasClass('disabled') || noFocus) {\n          return false;\n        }\n        _this.editor.toolbar.wrapper.removeClass('menu-on');\n        param = btn.data('param');\n        _this.command(param);\n        return false;\n      };\n    })(this));\n    this.wrapper.on('mousedown', 'a.menu-item', function(e) {\n      return false;\n    });\n    this.editor.on('blur', (function(_this) {\n      return function() {\n        var editorActive;\n        editorActive = _this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]');\n        if (!(editorActive && !_this.editor.clipboard.pasting)) {\n          return;\n        }\n        _this.setActive(false);\n        return _this.setDisabled(false);\n      };\n    })(this));\n    if (this.shortcut != null) {\n      this.editor.hotkeys.add(this.shortcut, (function(_this) {\n        return function(e) {\n          _this.el.mousedown();\n          return false;\n        };\n      })(this));\n    }\n    ref = this.htmlTag.split(',');\n    for (k = 0, len = ref.length; k < len; k++) {\n      tag = ref[k];\n      tag = $.trim(tag);\n      if (tag && $.inArray(tag, this.editor.formatter._allowedTags) < 0) {\n        this.editor.formatter._allowedTags.push(tag);\n      }\n    }\n    return this.editor.on('selectionchanged', (function(_this) {\n      return function(e) {\n        if (_this.editor.inputManager.focused) {\n          return _this._status();\n        }\n      };\n    })(this));\n  };\n\n  Button.prototype.iconClassOf = function(icon) {\n    if (icon) {\n      return \"simditor-icon simditor-icon-\" + icon;\n    } else {\n      return '';\n    }\n  };\n\n  Button.prototype.setIcon = function(icon) {\n    return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);\n  };\n\n  Button.prototype.render = function() {\n    this.wrapper = $(this._tpl.item).appendTo(this.editor.toolbar.list);\n    this.el = this.wrapper.find('a.toolbar-item');\n    this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\n    this.setIcon(this.icon);\n    if (!this.menu) {\n      return;\n    }\n    this.menuWrapper = $(this._tpl.menuWrapper).appendTo(this.wrapper);\n    this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\n    return this.renderMenu();\n  };\n\n  Button.prototype.renderMenu = function() {\n    var $menuBtnEl, $menuItemEl, k, len, menuItem, ref, ref1, results;\n    if (!$.isArray(this.menu)) {\n      return;\n    }\n    this.menuEl = $('<ul/>').appendTo(this.menuWrapper);\n    ref = this.menu;\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      menuItem = ref[k];\n      if (menuItem === '|') {\n        $(this._tpl.separator).appendTo(this.menuEl);\n        continue;\n      }\n      $menuItemEl = $(this._tpl.menuItem).appendTo(this.menuEl);\n      $menuBtnEl = $menuItemEl.find('a.menu-item').attr({\n        'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,\n        'data-param': menuItem.param\n      }).addClass('menu-item-' + menuItem.name);\n      if (menuItem.icon) {\n        results.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));\n      } else {\n        results.push($menuBtnEl.find('span').text(menuItem.text));\n      }\n    }\n    return results;\n  };\n\n  Button.prototype.setActive = function(active) {\n    if (active === this.active) {\n      return;\n    }\n    this.active = active;\n    return this.el.toggleClass('active', this.active);\n  };\n\n  Button.prototype.setDisabled = function(disabled) {\n    if (disabled === this.disabled) {\n      return;\n    }\n    this.disabled = disabled;\n    return this.el.toggleClass('disabled', this.disabled);\n  };\n\n  Button.prototype._disableStatus = function() {\n    var disabled, endNodes, startNodes;\n    startNodes = this.editor.selection.startNodes();\n    endNodes = this.editor.selection.endNodes();\n    disabled = startNodes.filter(this.disableTag).length > 0 || endNodes.filter(this.disableTag).length > 0;\n    this.setDisabled(disabled);\n    if (this.disabled) {\n      this.setActive(false);\n    }\n    return this.disabled;\n  };\n\n  Button.prototype._activeStatus = function() {\n    var active, endNode, endNodes, startNode, startNodes;\n    startNodes = this.editor.selection.startNodes();\n    endNodes = this.editor.selection.endNodes();\n    startNode = startNodes.filter(this.htmlTag);\n    endNode = endNodes.filter(this.htmlTag);\n    active = startNode.length > 0 && endNode.length > 0 && startNode.is(endNode);\n    this.node = active ? startNode : null;\n    this.setActive(active);\n    return this.active;\n  };\n\n  Button.prototype._status = function() {\n    this._disableStatus();\n    if (this.disabled) {\n      return;\n    }\n    return this._activeStatus();\n  };\n\n  Button.prototype.command = function(param) {};\n\n  Button.prototype._t = function() {\n    var args, ref, result;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    result = Button.__super__._t.apply(this, args);\n    if (!result) {\n      result = (ref = this.editor)._t.apply(ref, args);\n    }\n    return result;\n  };\n\n  return Button;\n\n})(SimpleModule);\n\nSimditor.Button = Button;\n\nPopover = (function(superClass) {\n  extend(Popover, superClass);\n\n  Popover.prototype.offset = {\n    top: 4,\n    left: 0\n  };\n\n  Popover.prototype.target = null;\n\n  Popover.prototype.active = false;\n\n  function Popover(opts) {\n    this.button = opts.button;\n    this.editor = opts.button.editor;\n    Popover.__super__.constructor.call(this, opts);\n  }\n\n  Popover.prototype._init = function() {\n    this.el = $('<div class=\"simditor-popover\"></div>').appendTo(this.editor.el).data('popover', this);\n    this.render();\n    this.el.on('mouseenter', (function(_this) {\n      return function(e) {\n        return _this.el.addClass('hover');\n      };\n    })(this));\n    return this.el.on('mouseleave', (function(_this) {\n      return function(e) {\n        return _this.el.removeClass('hover');\n      };\n    })(this));\n  };\n\n  Popover.prototype.render = function() {};\n\n  Popover.prototype._initLabelWidth = function() {\n    var $fields;\n    $fields = this.el.find('.settings-field');\n    if (!($fields.length > 0)) {\n      return;\n    }\n    this._labelWidth = 0;\n    $fields.each((function(_this) {\n      return function(i, field) {\n        var $field, $label;\n        $field = $(field);\n        $label = $field.find('label');\n        if (!($label.length > 0)) {\n          return;\n        }\n        return _this._labelWidth = Math.max(_this._labelWidth, $label.width());\n      };\n    })(this));\n    return $fields.find('label').width(this._labelWidth);\n  };\n\n  Popover.prototype.show = function($target, position) {\n    if (position == null) {\n      position = 'bottom';\n    }\n    if ($target == null) {\n      return;\n    }\n    this.el.siblings('.simditor-popover').each(function(i, popover) {\n      popover = $(popover).data('popover');\n      if (popover.active) {\n        return popover.hide();\n      }\n    });\n    if (this.active && this.target) {\n      this.target.removeClass('selected');\n    }\n    this.target = $target.addClass('selected');\n    if (this.active) {\n      this.refresh(position);\n      return this.trigger('popovershow');\n    } else {\n      this.active = true;\n      this.el.css({\n        left: -9999\n      }).show();\n      if (!this._labelWidth) {\n        this._initLabelWidth();\n      }\n      this.editor.util.reflow();\n      this.refresh(position);\n      return this.trigger('popovershow');\n    }\n  };\n\n  Popover.prototype.hide = function() {\n    if (!this.active) {\n      return;\n    }\n    if (this.target) {\n      this.target.removeClass('selected');\n    }\n    this.target = null;\n    this.active = false;\n    this.el.hide();\n    return this.trigger('popoverhide');\n  };\n\n  Popover.prototype.refresh = function(position) {\n    var editorOffset, left, maxLeft, targetH, targetOffset, top;\n    if (position == null) {\n      position = 'bottom';\n    }\n    if (!this.active) {\n      return;\n    }\n    editorOffset = this.editor.el.offset();\n    targetOffset = this.target.offset();\n    targetH = this.target.outerHeight();\n    if (position === 'bottom') {\n      top = targetOffset.top - editorOffset.top + targetH;\n    } else if (position === 'top') {\n      top = targetOffset.top - editorOffset.top - this.el.height();\n    }\n    maxLeft = this.editor.wrapper.width() - this.el.outerWidth() - 10;\n    left = Math.min(targetOffset.left - editorOffset.left, maxLeft);\n    return this.el.css({\n      top: top + this.offset.top,\n      left: left + this.offset.left\n    });\n  };\n\n  Popover.prototype.destroy = function() {\n    this.target = null;\n    this.active = false;\n    this.editor.off('.linkpopover');\n    return this.el.remove();\n  };\n\n  Popover.prototype._t = function() {\n    var args, ref, result;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    result = Popover.__super__._t.apply(this, args);\n    if (!result) {\n      result = (ref = this.button)._t.apply(ref, args);\n    }\n    return result;\n  };\n\n  return Popover;\n\n})(SimpleModule);\n\nSimditor.Popover = Popover;\n\nTitleButton = (function(superClass) {\n  extend(TitleButton, superClass);\n\n  function TitleButton() {\n    return TitleButton.__super__.constructor.apply(this, arguments);\n  }\n\n  TitleButton.prototype.name = 'title';\n\n  TitleButton.prototype.htmlTag = 'h1, h2, h3, h4, h5';\n\n  TitleButton.prototype.disableTag = 'pre, table';\n\n  TitleButton.prototype._init = function() {\n    this.menu = [\n      {\n        name: 'normal',\n        text: this._t('normalText'),\n        param: 'p'\n      }, '|', {\n        name: 'h1',\n        text: this._t('title') + ' 1',\n        param: 'h1'\n      }, {\n        name: 'h2',\n        text: this._t('title') + ' 2',\n        param: 'h2'\n      }, {\n        name: 'h3',\n        text: this._t('title') + ' 3',\n        param: 'h3'\n      }, {\n        name: 'h4',\n        text: this._t('title') + ' 4',\n        param: 'h4'\n      }, {\n        name: 'h5',\n        text: this._t('title') + ' 5',\n        param: 'h5'\n      }\n    ];\n    return TitleButton.__super__._init.call(this);\n  };\n\n  TitleButton.prototype.setActive = function(active, param) {\n    TitleButton.__super__.setActive.call(this, active);\n    if (active) {\n      param || (param = this.node[0].tagName.toLowerCase());\n    }\n    this.el.removeClass('active-p active-h1 active-h2 active-h3 active-h4 active-h5');\n    if (active) {\n      return this.el.addClass('active active-' + param);\n    }\n  };\n\n  TitleButton.prototype.command = function(param) {\n    var $rootNodes;\n    $rootNodes = this.editor.selection.rootNodes();\n    this.editor.selection.save();\n    $rootNodes.each((function(_this) {\n      return function(i, node) {\n        var $node;\n        $node = $(node);\n        if ($node.is('blockquote') || $node.is(param) || $node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node)) {\n          return;\n        }\n        return $('<' + param + '/>').append($node.contents()).replaceAll($node);\n      };\n    })(this));\n    this.editor.selection.restore();\n    return this.editor.trigger('valuechanged');\n  };\n\n  return TitleButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(TitleButton);\n\nFontScaleButton = (function(superClass) {\n  extend(FontScaleButton, superClass);\n\n  function FontScaleButton() {\n    return FontScaleButton.__super__.constructor.apply(this, arguments);\n  }\n\n  FontScaleButton.prototype.name = 'fontScale';\n\n  FontScaleButton.prototype.icon = 'font';\n\n  FontScaleButton.prototype.disableTag = 'pre';\n\n  FontScaleButton.prototype.htmlTag = 'span';\n\n  FontScaleButton.prototype.sizeMap = {\n    'x-large': '1.5em',\n    'large': '1.25em',\n    'small': '.75em',\n    'x-small': '.5em'\n  };\n\n  FontScaleButton.prototype._init = function() {\n    this.menu = [\n      {\n        name: '150%',\n        text: this._t('fontScaleXLarge'),\n        param: '5'\n      }, {\n        name: '125%',\n        text: this._t('fontScaleLarge'),\n        param: '4'\n      }, {\n        name: '100%',\n        text: this._t('fontScaleNormal'),\n        param: '3'\n      }, {\n        name: '75%',\n        text: this._t('fontScaleSmall'),\n        param: '2'\n      }, {\n        name: '50%',\n        text: this._t('fontScaleXSmall'),\n        param: '1'\n      }\n    ];\n    return FontScaleButton.__super__._init.call(this);\n  };\n\n  FontScaleButton.prototype._activeStatus = function() {\n    var active, endNode, endNodes, range, startNode, startNodes;\n    range = this.editor.selection.range();\n    startNodes = this.editor.selection.startNodes();\n    endNodes = this.editor.selection.endNodes();\n    startNode = startNodes.filter('span[style*=\"font-size\"]');\n    endNode = endNodes.filter('span[style*=\"font-size\"]');\n    active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\n    this.setActive(active);\n    return this.active;\n  };\n\n  FontScaleButton.prototype.command = function(param) {\n    var $scales, containerNode, range;\n    range = this.editor.selection.range();\n    if (range.collapsed) {\n      return;\n    }\n    document.execCommand('styleWithCSS', false, true);\n    document.execCommand('fontSize', false, param);\n    document.execCommand('styleWithCSS', false, false);\n    this.editor.selection.reset();\n    this.editor.selection.range();\n    containerNode = this.editor.selection.containerNode();\n    if (containerNode[0].nodeType === Node.TEXT_NODE) {\n      $scales = containerNode.closest('span[style*=\"font-size\"]');\n    } else {\n      $scales = containerNode.find('span[style*=\"font-size\"]');\n    }\n    $scales.each((function(_this) {\n      return function(i, n) {\n        var $span, size;\n        $span = $(n);\n        size = n.style.fontSize;\n        if (/large|x-large|small|x-small/.test(size)) {\n          return $span.css('fontSize', _this.sizeMap[size]);\n        } else if (size === 'medium') {\n          return $span.replaceWith($span.contents());\n        }\n      };\n    })(this));\n    return this.editor.trigger('valuechanged');\n  };\n\n  return FontScaleButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(FontScaleButton);\n\nBoldButton = (function(superClass) {\n  extend(BoldButton, superClass);\n\n  function BoldButton() {\n    return BoldButton.__super__.constructor.apply(this, arguments);\n  }\n\n  BoldButton.prototype.name = 'bold';\n\n  BoldButton.prototype.icon = 'bold';\n\n  BoldButton.prototype.htmlTag = 'b, strong';\n\n  BoldButton.prototype.disableTag = 'pre';\n\n  BoldButton.prototype.shortcut = 'cmd+b';\n\n  BoldButton.prototype._init = function() {\n    if (this.editor.util.os.mac) {\n      this.title = this.title + ' ( Cmd + b )';\n    } else {\n      this.title = this.title + ' ( Ctrl + b )';\n      this.shortcut = 'ctrl+b';\n    }\n    return BoldButton.__super__._init.call(this);\n  };\n\n  BoldButton.prototype._activeStatus = function() {\n    var active;\n    active = document.queryCommandState('bold') === true;\n    this.setActive(active);\n    return this.active;\n  };\n\n  BoldButton.prototype.command = function() {\n    document.execCommand('bold');\n    if (!this.editor.util.support.oninput) {\n      this.editor.trigger('valuechanged');\n    }\n    return $(document).trigger('selectionchange');\n  };\n\n  return BoldButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(BoldButton);\n\nItalicButton = (function(superClass) {\n  extend(ItalicButton, superClass);\n\n  function ItalicButton() {\n    return ItalicButton.__super__.constructor.apply(this, arguments);\n  }\n\n  ItalicButton.prototype.name = 'italic';\n\n  ItalicButton.prototype.icon = 'italic';\n\n  ItalicButton.prototype.htmlTag = 'i';\n\n  ItalicButton.prototype.disableTag = 'pre';\n\n  ItalicButton.prototype.shortcut = 'cmd+i';\n\n  ItalicButton.prototype._init = function() {\n    if (this.editor.util.os.mac) {\n      this.title = this.title + \" ( Cmd + i )\";\n    } else {\n      this.title = this.title + \" ( Ctrl + i )\";\n      this.shortcut = 'ctrl+i';\n    }\n    return ItalicButton.__super__._init.call(this);\n  };\n\n  ItalicButton.prototype._activeStatus = function() {\n    var active;\n    active = document.queryCommandState('italic') === true;\n    this.setActive(active);\n    return this.active;\n  };\n\n  ItalicButton.prototype.command = function() {\n    document.execCommand('italic');\n    if (!this.editor.util.support.oninput) {\n      this.editor.trigger('valuechanged');\n    }\n    return $(document).trigger('selectionchange');\n  };\n\n  return ItalicButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(ItalicButton);\n\nUnderlineButton = (function(superClass) {\n  extend(UnderlineButton, superClass);\n\n  function UnderlineButton() {\n    return UnderlineButton.__super__.constructor.apply(this, arguments);\n  }\n\n  UnderlineButton.prototype.name = 'underline';\n\n  UnderlineButton.prototype.icon = 'underline';\n\n  UnderlineButton.prototype.htmlTag = 'u';\n\n  UnderlineButton.prototype.disableTag = 'pre';\n\n  UnderlineButton.prototype.shortcut = 'cmd+u';\n\n  UnderlineButton.prototype.render = function() {\n    if (this.editor.util.os.mac) {\n      this.title = this.title + ' ( Cmd + u )';\n    } else {\n      this.title = this.title + ' ( Ctrl + u )';\n      this.shortcut = 'ctrl+u';\n    }\n    return UnderlineButton.__super__.render.call(this);\n  };\n\n  UnderlineButton.prototype._activeStatus = function() {\n    var active;\n    active = document.queryCommandState('underline') === true;\n    this.setActive(active);\n    return this.active;\n  };\n\n  UnderlineButton.prototype.command = function() {\n    document.execCommand('underline');\n    if (!this.editor.util.support.oninput) {\n      this.editor.trigger('valuechanged');\n    }\n    return $(document).trigger('selectionchange');\n  };\n\n  return UnderlineButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(UnderlineButton);\n\nColorButton = (function(superClass) {\n  extend(ColorButton, superClass);\n\n  function ColorButton() {\n    return ColorButton.__super__.constructor.apply(this, arguments);\n  }\n\n  ColorButton.prototype.name = 'color';\n\n  ColorButton.prototype.icon = 'tint';\n\n  ColorButton.prototype.disableTag = 'pre';\n\n  ColorButton.prototype.menu = true;\n\n  ColorButton.prototype.render = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return ColorButton.__super__.render.apply(this, args);\n  };\n\n  ColorButton.prototype.renderMenu = function() {\n    $('<ul class=\"color-list\">\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-1\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-2\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-3\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-4\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-5\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-6\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-7\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-default\"></a></li>\\n</ul>').appendTo(this.menuWrapper);\n    this.menuWrapper.on('mousedown', '.color-list', function(e) {\n      return false;\n    });\n    return this.menuWrapper.on('click', '.font-color', (function(_this) {\n      return function(e) {\n        var $link, $p, hex, range, rgb, textNode;\n        _this.wrapper.removeClass('menu-on');\n        $link = $(e.currentTarget);\n        if ($link.hasClass('font-color-default')) {\n          $p = _this.editor.body.find('p, li');\n          if (!($p.length > 0)) {\n            return;\n          }\n          rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');\n          hex = _this._convertRgbToHex(rgb);\n        } else {\n          rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');\n          hex = _this._convertRgbToHex(rgb);\n        }\n        if (!hex) {\n          return;\n        }\n        range = _this.editor.selection.range();\n        if (!$link.hasClass('font-color-default') && range.collapsed) {\n          textNode = document.createTextNode(_this._t('coloredText'));\n          range.insertNode(textNode);\n          range.selectNodeContents(textNode);\n          _this.editor.selection.range(range);\n        }\n        document.execCommand('styleWithCSS', false, true);\n        document.execCommand('foreColor', false, hex);\n        document.execCommand('styleWithCSS', false, false);\n        if (!_this.editor.util.support.oninput) {\n          return _this.editor.trigger('valuechanged');\n        }\n      };\n    })(this));\n  };\n\n  ColorButton.prototype._convertRgbToHex = function(rgb) {\n    var match, re, rgbToHex;\n    re = /rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)/g;\n    match = re.exec(rgb);\n    if (!match) {\n      return '';\n    }\n    rgbToHex = function(r, g, b) {\n      var componentToHex;\n      componentToHex = function(c) {\n        var hex;\n        hex = c.toString(16);\n        if (hex.length === 1) {\n          return '0' + hex;\n        } else {\n          return hex;\n        }\n      };\n      return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    };\n    return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);\n  };\n\n  return ColorButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(ColorButton);\n\nListButton = (function(superClass) {\n  extend(ListButton, superClass);\n\n  function ListButton() {\n    return ListButton.__super__.constructor.apply(this, arguments);\n  }\n\n  ListButton.prototype.type = '';\n\n  ListButton.prototype.disableTag = 'pre, table';\n\n  ListButton.prototype.command = function(param) {\n    var $list, $rootNodes, anotherType;\n    $rootNodes = this.editor.selection.blockNodes();\n    anotherType = this.type === 'ul' ? 'ol' : 'ul';\n    this.editor.selection.save();\n    $list = null;\n    $rootNodes.each((function(_this) {\n      return function(i, node) {\n        var $node;\n        $node = $(node);\n        if ($node.is('blockquote, li') || $node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node) || !$.contains(document, node)) {\n          return;\n        }\n        if ($node.is(_this.type)) {\n          $node.children('li').each(function(i, li) {\n            var $childList, $li;\n            $li = $(li);\n            $childList = $li.children('ul, ol').insertAfter($node);\n            return $('<p/>').append($(li).html() || _this.editor.util.phBr).insertBefore($node);\n          });\n          return $node.remove();\n        } else if ($node.is(anotherType)) {\n          return $('<' + _this.type + '/>').append($node.contents()).replaceAll($node);\n        } else if ($list && $node.prev().is($list)) {\n          $('<li/>').append($node.html() || _this.editor.util.phBr).appendTo($list);\n          return $node.remove();\n        } else {\n          $list = $(\"<\" + _this.type + \"><li></li></\" + _this.type + \">\");\n          $list.find('li').append($node.html() || _this.editor.util.phBr);\n          return $list.replaceAll($node);\n        }\n      };\n    })(this));\n    this.editor.selection.restore();\n    return this.editor.trigger('valuechanged');\n  };\n\n  return ListButton;\n\n})(Button);\n\nOrderListButton = (function(superClass) {\n  extend(OrderListButton, superClass);\n\n  function OrderListButton() {\n    return OrderListButton.__super__.constructor.apply(this, arguments);\n  }\n\n  OrderListButton.prototype.type = 'ol';\n\n  OrderListButton.prototype.name = 'ol';\n\n  OrderListButton.prototype.icon = 'list-ol';\n\n  OrderListButton.prototype.htmlTag = 'ol';\n\n  OrderListButton.prototype.shortcut = 'cmd+/';\n\n  OrderListButton.prototype._init = function() {\n    if (this.editor.util.os.mac) {\n      this.title = this.title + ' ( Cmd + / )';\n    } else {\n      this.title = this.title + ' ( ctrl + / )';\n      this.shortcut = 'ctrl+/';\n    }\n    return OrderListButton.__super__._init.call(this);\n  };\n\n  return OrderListButton;\n\n})(ListButton);\n\nUnorderListButton = (function(superClass) {\n  extend(UnorderListButton, superClass);\n\n  function UnorderListButton() {\n    return UnorderListButton.__super__.constructor.apply(this, arguments);\n  }\n\n  UnorderListButton.prototype.type = 'ul';\n\n  UnorderListButton.prototype.name = 'ul';\n\n  UnorderListButton.prototype.icon = 'list-ul';\n\n  UnorderListButton.prototype.htmlTag = 'ul';\n\n  UnorderListButton.prototype.shortcut = 'cmd+.';\n\n  UnorderListButton.prototype._init = function() {\n    if (this.editor.util.os.mac) {\n      this.title = this.title + ' ( Cmd + . )';\n    } else {\n      this.title = this.title + ' ( Ctrl + . )';\n      this.shortcut = 'ctrl+.';\n    }\n    return UnorderListButton.__super__._init.call(this);\n  };\n\n  return UnorderListButton;\n\n})(ListButton);\n\nSimditor.Toolbar.addButton(OrderListButton);\n\nSimditor.Toolbar.addButton(UnorderListButton);\n\nBlockquoteButton = (function(superClass) {\n  extend(BlockquoteButton, superClass);\n\n  function BlockquoteButton() {\n    return BlockquoteButton.__super__.constructor.apply(this, arguments);\n  }\n\n  BlockquoteButton.prototype.name = 'blockquote';\n\n  BlockquoteButton.prototype.icon = 'quote-left';\n\n  BlockquoteButton.prototype.htmlTag = 'blockquote';\n\n  BlockquoteButton.prototype.disableTag = 'pre, table';\n\n  BlockquoteButton.prototype.command = function() {\n    var $rootNodes, clearCache, nodeCache;\n    $rootNodes = this.editor.selection.rootNodes();\n    $rootNodes = $rootNodes.filter(function(i, node) {\n      return !$(node).parent().is('blockquote');\n    });\n    this.editor.selection.save();\n    nodeCache = [];\n    clearCache = (function(_this) {\n      return function() {\n        if (nodeCache.length > 0) {\n          $(\"<\" + _this.htmlTag + \"/>\").insertBefore(nodeCache[0]).append(nodeCache);\n          return nodeCache.length = 0;\n        }\n      };\n    })(this);\n    $rootNodes.each((function(_this) {\n      return function(i, node) {\n        var $node;\n        $node = $(node);\n        if (!$node.parent().is(_this.editor.body)) {\n          return;\n        }\n        if ($node.is(_this.htmlTag)) {\n          clearCache();\n          return $node.children().unwrap();\n        } else if ($node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node)) {\n          return clearCache();\n        } else {\n          return nodeCache.push(node);\n        }\n      };\n    })(this));\n    clearCache();\n    this.editor.selection.restore();\n    return this.editor.trigger('valuechanged');\n  };\n\n  return BlockquoteButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(BlockquoteButton);\n\nCodeButton = (function(superClass) {\n  extend(CodeButton, superClass);\n\n  function CodeButton() {\n    return CodeButton.__super__.constructor.apply(this, arguments);\n  }\n\n  CodeButton.prototype.name = 'code';\n\n  CodeButton.prototype.icon = 'code';\n\n  CodeButton.prototype.htmlTag = 'pre';\n\n  CodeButton.prototype.disableTag = 'ul, ol, table';\n\n  CodeButton.prototype._init = function() {\n    CodeButton.__super__._init.call(this);\n    this.editor.on('decorate', (function(_this) {\n      return function(e, $el) {\n        return $el.find('pre').each(function(i, pre) {\n          return _this.decorate($(pre));\n        });\n      };\n    })(this));\n    return this.editor.on('undecorate', (function(_this) {\n      return function(e, $el) {\n        return $el.find('pre').each(function(i, pre) {\n          return _this.undecorate($(pre));\n        });\n      };\n    })(this));\n  };\n\n  CodeButton.prototype.render = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    CodeButton.__super__.render.apply(this, args);\n    return this.popover = new CodePopover({\n      button: this\n    });\n  };\n\n  CodeButton.prototype._checkMode = function() {\n    var $blockNodes, range;\n    range = this.editor.selection.range();\n    if (($blockNodes = $(range.cloneContents()).find(this.editor.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.selection.startNodes().filter('code').length === 0)) {\n      this.inlineMode = false;\n      return this.htmlTag = 'pre';\n    } else {\n      this.inlineMode = true;\n      return this.htmlTag = 'code';\n    }\n  };\n\n  CodeButton.prototype._status = function() {\n    this._checkMode();\n    CodeButton.__super__._status.call(this);\n    if (this.inlineMode) {\n      return;\n    }\n    if (this.active) {\n      return this.popover.show(this.node);\n    } else {\n      return this.popover.hide();\n    }\n  };\n\n  CodeButton.prototype.decorate = function($pre) {\n    var $code, lang, ref, ref1;\n    $code = $pre.find('> code');\n    if ($code.length > 0) {\n      lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\n      $code.contents().unwrap();\n      if (lang) {\n        return $pre.attr('data-lang', lang);\n      }\n    }\n  };\n\n  CodeButton.prototype.undecorate = function($pre) {\n    var $code, lang;\n    lang = $pre.attr('data-lang');\n    $code = $('<code/>');\n    if (lang && lang !== -1) {\n      $code.addClass('lang-' + lang);\n    }\n    return $pre.wrapInner($code).removeAttr('data-lang');\n  };\n\n  CodeButton.prototype.command = function() {\n    if (this.inlineMode) {\n      return this._inlineCommand();\n    } else {\n      return this._blockCommand();\n    }\n  };\n\n  CodeButton.prototype._blockCommand = function() {\n    var $rootNodes, clearCache, nodeCache, resultNodes;\n    $rootNodes = this.editor.selection.rootNodes();\n    nodeCache = [];\n    resultNodes = [];\n    clearCache = (function(_this) {\n      return function() {\n        var $pre;\n        if (!(nodeCache.length > 0)) {\n          return;\n        }\n        $pre = $(\"<\" + _this.htmlTag + \"/>\").insertBefore(nodeCache[0]).text(_this.editor.formatter.clearHtml(nodeCache));\n        resultNodes.push($pre[0]);\n        return nodeCache.length = 0;\n      };\n    })(this);\n    $rootNodes.each((function(_this) {\n      return function(i, node) {\n        var $node, $p;\n        $node = $(node);\n        if ($node.is(_this.htmlTag)) {\n          clearCache();\n          $p = $('<p/>').append($node.html().replace('\\n', '<br/>')).replaceAll($node);\n          return resultNodes.push($p[0]);\n        } else if ($node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node) || $node.is('blockquote')) {\n          return clearCache();\n        } else {\n          return nodeCache.push(node);\n        }\n      };\n    })(this));\n    clearCache();\n    this.editor.selection.setRangeAtEndOf($(resultNodes).last());\n    return this.editor.trigger('valuechanged');\n  };\n\n  CodeButton.prototype._inlineCommand = function() {\n    var $code, $contents, range;\n    range = this.editor.selection.range();\n    if (this.active) {\n      range.selectNodeContents(this.node[0]);\n      this.editor.selection.save(range);\n      this.node.contents().unwrap();\n      this.editor.selection.restore();\n    } else {\n      $contents = $(range.extractContents());\n      $code = $(\"<\" + this.htmlTag + \"/>\").append($contents.contents());\n      range.insertNode($code[0]);\n      range.selectNodeContents($code[0]);\n      this.editor.selection.range(range);\n    }\n    return this.editor.trigger('valuechanged');\n  };\n\n  return CodeButton;\n\n})(Button);\n\nCodePopover = (function(superClass) {\n  extend(CodePopover, superClass);\n\n  function CodePopover() {\n    return CodePopover.__super__.constructor.apply(this, arguments);\n  }\n\n  CodePopover.prototype.render = function() {\n    var $option, k, lang, len, ref;\n    this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\n    this.langs = this.editor.opts.codeLanguages || [\n      {\n        name: 'Bash',\n        value: 'bash'\n      }, {\n        name: 'C++',\n        value: 'c++'\n      }, {\n        name: 'C#',\n        value: 'cs'\n      }, {\n        name: 'CSS',\n        value: 'css'\n      }, {\n        name: 'Erlang',\n        value: 'erlang'\n      }, {\n        name: 'Less',\n        value: 'less'\n      }, {\n        name: 'Sass',\n        value: 'sass'\n      }, {\n        name: 'Diff',\n        value: 'diff'\n      }, {\n        name: 'CoffeeScript',\n        value: 'coffeescript'\n      }, {\n        name: 'HTML,XML',\n        value: 'html'\n      }, {\n        name: 'JSON',\n        value: 'json'\n      }, {\n        name: 'Java',\n        value: 'java'\n      }, {\n        name: 'JavaScript',\n        value: 'js'\n      }, {\n        name: 'Markdown',\n        value: 'markdown'\n      }, {\n        name: 'Objective C',\n        value: 'oc'\n      }, {\n        name: 'PHP',\n        value: 'php'\n      }, {\n        name: 'Perl',\n        value: 'parl'\n      }, {\n        name: 'Python',\n        value: 'python'\n      }, {\n        name: 'Ruby',\n        value: 'ruby'\n      }, {\n        name: 'SQL',\n        value: 'sql'\n      }\n    ];\n    this.el.addClass('code-popover').append(this._tpl);\n    this.selectEl = this.el.find('.select-lang');\n    ref = this.langs;\n    for (k = 0, len = ref.length; k < len; k++) {\n      lang = ref[k];\n      $option = $('<option/>', {\n        text: lang.name,\n        value: lang.value\n      }).appendTo(this.selectEl);\n    }\n    this.selectEl.on('change', (function(_this) {\n      return function(e) {\n        var selected;\n        _this.lang = _this.selectEl.val();\n        selected = _this.target.hasClass('selected');\n        _this.target.removeClass().removeAttr('data-lang');\n        if (_this.lang !== -1) {\n          _this.target.attr('data-lang', _this.lang);\n        }\n        if (selected) {\n          _this.target.addClass('selected');\n        }\n        return _this.editor.trigger('valuechanged');\n      };\n    })(this));\n    return this.editor.on('valuechanged', (function(_this) {\n      return function(e) {\n        if (_this.active) {\n          return _this.refresh();\n        }\n      };\n    })(this));\n  };\n\n  CodePopover.prototype.show = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    CodePopover.__super__.show.apply(this, args);\n    this.lang = this.target.attr('data-lang');\n    if (this.lang != null) {\n      return this.selectEl.val(this.lang);\n    } else {\n      return this.selectEl.val(-1);\n    }\n  };\n\n  return CodePopover;\n\n})(Popover);\n\nSimditor.Toolbar.addButton(CodeButton);\n\nLinkButton = (function(superClass) {\n  extend(LinkButton, superClass);\n\n  function LinkButton() {\n    return LinkButton.__super__.constructor.apply(this, arguments);\n  }\n\n  LinkButton.prototype.name = 'link';\n\n  LinkButton.prototype.icon = 'link';\n\n  LinkButton.prototype.htmlTag = 'a';\n\n  LinkButton.prototype.disableTag = 'pre';\n\n  LinkButton.prototype.render = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    LinkButton.__super__.render.apply(this, args);\n    return this.popover = new LinkPopover({\n      button: this\n    });\n  };\n\n  LinkButton.prototype._status = function() {\n    LinkButton.__super__._status.call(this);\n    if (this.active && !this.editor.selection.rangeAtEndOf(this.node)) {\n      return this.popover.show(this.node);\n    } else {\n      return this.popover.hide();\n    }\n  };\n\n  LinkButton.prototype.command = function() {\n    var $contents, $link, $newBlock, linkText, range, txtNode;\n    range = this.editor.selection.range();\n    if (this.active) {\n      txtNode = document.createTextNode(this.node.text());\n      this.node.replaceWith(txtNode);\n      range.selectNode(txtNode);\n    } else {\n      $contents = $(range.extractContents());\n      linkText = this.editor.formatter.clearHtml($contents.contents(), false);\n      $link = $('<a/>', {\n        href: 'http://www.example.com',\n        target: '_blank',\n        text: linkText || this._t('linkText')\n      });\n      if (this.editor.selection.blockNodes().length > 0) {\n        range.insertNode($link[0]);\n      } else {\n        $newBlock = $('<p/>').append($link);\n        range.insertNode($newBlock[0]);\n      }\n      range.selectNodeContents($link[0]);\n      this.popover.one('popovershow', (function(_this) {\n        return function() {\n          if (linkText) {\n            _this.popover.urlEl.focus();\n            return _this.popover.urlEl[0].select();\n          } else {\n            _this.popover.textEl.focus();\n            return _this.popover.textEl[0].select();\n          }\n        };\n      })(this));\n    }\n    this.editor.selection.range(range);\n    return this.editor.trigger('valuechanged');\n  };\n\n  return LinkButton;\n\n})(Button);\n\nLinkPopover = (function(superClass) {\n  extend(LinkPopover, superClass);\n\n  function LinkPopover() {\n    return LinkPopover.__super__.constructor.apply(this, arguments);\n  }\n\n  LinkPopover.prototype.render = function() {\n    var tpl;\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkText')) + \"</label>\\n    <input class=\\\"link-text\\\" type=\\\"text\\\"/>\\n    <a class=\\\"btn-unlink\\\" href=\\\"javascript:;\\\" title=\\\"\" + (this._t('removeLink')) + \"\\\"\\n      tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-unlink\\\"></span>\\n    </a>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkUrl')) + \"</label>\\n    <input class=\\\"link-url\\\" type=\\\"text\\\"/>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkTarget')) + \"</label>\\n    <select class=\\\"link-target\\\">\\n      <option value=\\\"_blank\\\">\" + (this._t('openLinkInNewWindow')) + \" (_blank)</option>\\n      <option value=\\\"_self\\\">\" + (this._t('openLinkInCurrentWindow')) + \" (_self)</option>\\n    </select>\\n  </div>\\n</div>\";\n    this.el.addClass('link-popover').append(tpl);\n    this.textEl = this.el.find('.link-text');\n    this.urlEl = this.el.find('.link-url');\n    this.unlinkEl = this.el.find('.btn-unlink');\n    this.selectTarget = this.el.find('.link-target');\n    this.textEl.on('keyup', (function(_this) {\n      return function(e) {\n        if (e.which === 13) {\n          return;\n        }\n        _this.target.text(_this.textEl.val());\n        return _this.editor.inputManager.throttledValueChanged();\n      };\n    })(this));\n    this.urlEl.on('keyup', (function(_this) {\n      return function(e) {\n        var val;\n        if (e.which === 13) {\n          return;\n        }\n        val = _this.urlEl.val();\n        if (!(/https?:\\/\\/|^\\//ig.test(val) || !val)) {\n          val = 'http://' + val;\n        }\n        _this.target.attr('href', val);\n        return _this.editor.inputManager.throttledValueChanged();\n      };\n    })(this));\n    $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {\n      return function(e) {\n        var range;\n        if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {\n          e.preventDefault();\n          range = document.createRange();\n          _this.editor.selection.setRangeAfter(_this.target, range);\n          _this.hide();\n          return _this.editor.inputManager.throttledValueChanged();\n        }\n      };\n    })(this));\n    this.unlinkEl.on('click', (function(_this) {\n      return function(e) {\n        var range, txtNode;\n        txtNode = document.createTextNode(_this.target.text());\n        _this.target.replaceWith(txtNode);\n        _this.hide();\n        range = document.createRange();\n        _this.editor.selection.setRangeAfter(txtNode, range);\n        return _this.editor.inputManager.throttledValueChanged();\n      };\n    })(this));\n    return this.selectTarget.on('change', (function(_this) {\n      return function(e) {\n        _this.target.attr('target', _this.selectTarget.val());\n        return _this.editor.inputManager.throttledValueChanged();\n      };\n    })(this));\n  };\n\n  LinkPopover.prototype.show = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    LinkPopover.__super__.show.apply(this, args);\n    this.textEl.val(this.target.text());\n    return this.urlEl.val(this.target.attr('href'));\n  };\n\n  return LinkPopover;\n\n})(Popover);\n\nSimditor.Toolbar.addButton(LinkButton);\n\nImageButton = (function(superClass) {\n  extend(ImageButton, superClass);\n\n  function ImageButton() {\n    return ImageButton.__super__.constructor.apply(this, arguments);\n  }\n\n  ImageButton.prototype.name = 'image';\n\n  ImageButton.prototype.icon = 'picture-o';\n\n  ImageButton.prototype.htmlTag = 'img';\n\n  ImageButton.prototype.disableTag = 'pre, table';\n\n  ImageButton.prototype.defaultImage = '';\n\n  ImageButton.prototype.needFocus = false;\n\n  ImageButton.prototype._init = function() {\n    var item, k, len, ref;\n    if (this.editor.opts.imageButton) {\n      if (Array.isArray(this.editor.opts.imageButton)) {\n        this.menu = [];\n        ref = this.editor.opts.imageButton;\n        for (k = 0, len = ref.length; k < len; k++) {\n          item = ref[k];\n          this.menu.push({\n            name: item + '-image',\n            text: this._t(item + 'Image')\n          });\n        }\n      } else {\n        this.menu = false;\n      }\n    } else {\n      if (this.editor.uploader != null) {\n        this.menu = [\n          {\n            name: 'upload-image',\n            text: this._t('uploadImage')\n          }, {\n            name: 'external-image',\n            text: this._t('externalImage')\n          }\n        ];\n      } else {\n        this.menu = false;\n      }\n    }\n    this.defaultImage = this.editor.opts.defaultImage;\n    this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {\n      return function(e) {\n        var $img, range;\n        $img = $(e.currentTarget);\n        range = document.createRange();\n        range.selectNode($img[0]);\n        _this.editor.selection.range(range);\n        if (!_this.editor.util.support.onselectionchange) {\n          _this.editor.trigger('selectionchanged');\n        }\n        return false;\n      };\n    })(this));\n    this.editor.body.on('mouseup', 'img:not([data-non-image])', function(e) {\n      return false;\n    });\n    this.editor.on('selectionchanged.image', (function(_this) {\n      return function() {\n        var $contents, $img, range;\n        range = _this.editor.selection.range();\n        if (range == null) {\n          return;\n        }\n        $contents = $(range.cloneContents()).contents();\n        if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {\n          $img = $(range.startContainer).contents().eq(range.startOffset);\n          return _this.popover.show($img);\n        } else {\n          return _this.popover.hide();\n        }\n      };\n    })(this));\n    this.editor.on('valuechanged.image', (function(_this) {\n      return function() {\n        var $masks;\n        $masks = _this.editor.wrapper.find('.simditor-image-loading');\n        if (!($masks.length > 0)) {\n          return;\n        }\n        return $masks.each(function(i, mask) {\n          var $img, $mask, file;\n          $mask = $(mask);\n          $img = $mask.data('img');\n          if (!($img && $img.parent().length > 0)) {\n            $mask.remove();\n            if ($img) {\n              file = $img.data('file');\n              if (file) {\n                _this.editor.uploader.cancel(file);\n                if (_this.editor.body.find('img.uploading').length < 1) {\n                  return _this.editor.uploader.trigger('uploadready', [file]);\n                }\n              }\n            }\n          }\n        });\n      };\n    })(this));\n    return ImageButton.__super__._init.call(this);\n  };\n\n  ImageButton.prototype.render = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    ImageButton.__super__.render.apply(this, args);\n    this.popover = new ImagePopover({\n      button: this\n    });\n    if (this.editor.opts.imageButton === 'upload') {\n      return this._initUploader(this.el);\n    }\n  };\n\n  ImageButton.prototype.renderMenu = function() {\n    ImageButton.__super__.renderMenu.call(this);\n    return this._initUploader();\n  };\n\n  ImageButton.prototype._initUploader = function($uploadItem) {\n    var $input, createInput, uploadProgress;\n    if ($uploadItem == null) {\n      $uploadItem = this.menuEl.find('.menu-item-upload-image');\n    }\n    if (this.editor.uploader == null) {\n      this.el.find('.btn-upload').remove();\n      return;\n    }\n    $input = null;\n    createInput = (function(_this) {\n      return function() {\n        if ($input) {\n          $input.remove();\n        }\n        return $input = $('<input/>', {\n          type: 'file',\n          title: _this._t('uploadImage'),\n          multiple: true,\n          accept: 'image/*'\n        }).appendTo($uploadItem);\n      };\n    })(this);\n    createInput();\n    $uploadItem.on('click mousedown', 'input[type=file]', function(e) {\n      return e.stopPropagation();\n    });\n    $uploadItem.on('change', 'input[type=file]', (function(_this) {\n      return function(e) {\n        if (_this.editor.inputManager.focused) {\n          _this.editor.uploader.upload($input, {\n            inline: true\n          });\n          createInput();\n        } else {\n          _this.editor.one('focus', function(e) {\n            _this.editor.uploader.upload($input, {\n              inline: true\n            });\n            return createInput();\n          });\n          _this.editor.focus();\n        }\n        return _this.wrapper.removeClass('menu-on');\n      };\n    })(this));\n    this.editor.uploader.on('beforeupload', (function(_this) {\n      return function(e, file) {\n        var $img;\n        if (!file.inline) {\n          return;\n        }\n        if (file.img) {\n          $img = $(file.img);\n        } else {\n          $img = _this.createImage(file.name);\n          file.img = $img;\n        }\n        $img.addClass('uploading');\n        $img.data('file', file);\n        return _this.editor.uploader.readImageFile(file.obj, function(img) {\n          var src;\n          if (!$img.hasClass('uploading')) {\n            return;\n          }\n          src = img ? img.src : _this.defaultImage;\n          return _this.loadImage($img, src, function() {\n            if (_this.popover.active) {\n              _this.popover.refresh();\n              return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);\n            }\n          });\n        });\n      };\n    })(this));\n    uploadProgress = $.proxy(this.editor.util.throttle(function(e, file, loaded, total) {\n      var $img, $mask, percent;\n      if (!file.inline) {\n        return;\n      }\n      $mask = file.img.data('mask');\n      if (!$mask) {\n        return;\n      }\n      $img = $mask.data('img');\n      if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\n        $mask.remove();\n        return;\n      }\n      percent = loaded / total;\n      percent = (percent * 100).toFixed(0);\n      if (percent > 99) {\n        percent = 99;\n      }\n      return $mask.find('.progress').height((100 - percent) + \"%\");\n    }, 500), this);\n    this.editor.uploader.on('uploadprogress', uploadProgress);\n    this.editor.uploader.on('uploadsuccess', (function(_this) {\n      return function(e, file, result) {\n        var $img, img_path, msg;\n        if (!file.inline) {\n          return;\n        }\n        $img = file.img;\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\n          return;\n        }\n        if (typeof result !== 'object') {\n          try {\n            result = $.parseJSON(result);\n          } catch (_error) {\n            e = _error;\n            result = {\n              success: false\n            };\n          }\n        }\n        if (result.success === false) {\n          msg = result.msg || _this._t('uploadFailed');\n          alert(msg);\n          img_path = _this.defaultImage;\n        } else {\n          img_path = result.file_path;\n        }\n        _this.loadImage($img, img_path, function() {\n          var $mask;\n          $img.removeData('file');\n          $img.removeClass('uploading').removeClass('loading');\n          $mask = $img.data('mask');\n          if ($mask) {\n            $mask.remove();\n          }\n          $img.removeData('mask');\n          _this.editor.trigger('valuechanged');\n          if (_this.editor.body.find('img.uploading').length < 1) {\n            return _this.editor.uploader.trigger('uploadready', [file, result]);\n          }\n        });\n        if (_this.popover.active) {\n          _this.popover.srcEl.prop('disabled', false);\n          return _this.popover.srcEl.val(result.file_path);\n        }\n      };\n    })(this));\n    return this.editor.uploader.on('uploaderror', (function(_this) {\n      return function(e, file, xhr) {\n        var $img, msg, result;\n        if (!file.inline) {\n          return;\n        }\n        if (xhr.statusText === 'abort') {\n          return;\n        }\n        if (xhr.responseText) {\n          try {\n            result = $.parseJSON(xhr.responseText);\n            msg = result.msg;\n          } catch (_error) {\n            e = _error;\n            msg = _this._t('uploadError');\n          }\n          alert(msg);\n        }\n        $img = file.img;\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\n          return;\n        }\n        _this.loadImage($img, _this.defaultImage, function() {\n          var $mask;\n          $img.removeData('file');\n          $img.removeClass('uploading').removeClass('loading');\n          $mask = $img.data('mask');\n          if ($mask) {\n            $mask.remove();\n          }\n          return $img.removeData('mask');\n        });\n        if (_this.popover.active) {\n          _this.popover.srcEl.prop('disabled', false);\n          _this.popover.srcEl.val(_this.defaultImage);\n        }\n        _this.editor.trigger('valuechanged');\n        if (_this.editor.body.find('img.uploading').length < 1) {\n          return _this.editor.uploader.trigger('uploadready', [file, result]);\n        }\n      };\n    })(this));\n  };\n\n  ImageButton.prototype._status = function() {\n    return this._disableStatus();\n  };\n\n  ImageButton.prototype.loadImage = function($img, src, callback) {\n    var $mask, img, positionMask;\n    positionMask = (function(_this) {\n      return function() {\n        var imgOffset, wrapperOffset;\n        imgOffset = $img.offset();\n        wrapperOffset = _this.editor.wrapper.offset();\n        return $mask.css({\n          top: imgOffset.top - wrapperOffset.top,\n          left: imgOffset.left - wrapperOffset.left,\n          width: $img.width(),\n          height: $img.height()\n        }).show();\n      };\n    })(this);\n    $img.addClass('loading');\n    $mask = $img.data('mask');\n    if (!$mask) {\n      $mask = $('<div class=\"simditor-image-loading\">\\n  <div class=\"progress\"></div>\\n</div>').hide().appendTo(this.editor.wrapper);\n      positionMask();\n      $img.data('mask', $mask);\n      $mask.data('img', $img);\n    }\n    img = new Image();\n    img.onload = (function(_this) {\n      return function() {\n        var height, width;\n        if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {\n          return;\n        }\n        width = img.width;\n        height = img.height;\n        $img.attr({\n          src: src,\n          width: width,\n          height: height,\n          'data-image-size': width + ',' + height\n        }).removeClass('loading');\n        if ($img.hasClass('uploading')) {\n          _this.editor.util.reflow(_this.editor.body);\n          positionMask();\n        } else {\n          $mask.remove();\n          $img.removeData('mask');\n        }\n        if ($.isFunction(callback)) {\n          return callback(img);\n        }\n      };\n    })(this);\n    img.onerror = function() {\n      if ($.isFunction(callback)) {\n        callback(false);\n      }\n      $mask.remove();\n      return $img.removeData('mask').removeClass('loading');\n    };\n    return img.src = src;\n  };\n\n  ImageButton.prototype.createImage = function(name) {\n    var $img, range;\n    if (name == null) {\n      name = 'Image';\n    }\n    if (!this.editor.inputManager.focused) {\n      this.editor.focus();\n    }\n    range = this.editor.selection.range();\n    range.deleteContents();\n    this.editor.selection.range(range);\n    $img = $('<img/>').attr('alt', name);\n    range.insertNode($img[0]);\n    this.editor.selection.setRangeAfter($img, range);\n    this.editor.trigger('valuechanged');\n    return $img;\n  };\n\n  ImageButton.prototype.command = function(src) {\n    var $img;\n    $img = this.createImage();\n    return this.loadImage($img, src || this.defaultImage, (function(_this) {\n      return function() {\n        _this.editor.trigger('valuechanged');\n        _this.editor.util.reflow($img);\n        $img.click();\n        return _this.popover.one('popovershow', function() {\n          _this.popover.srcEl.focus();\n          return _this.popover.srcEl[0].select();\n        });\n      };\n    })(this));\n  };\n\n  return ImageButton;\n\n})(Button);\n\nImagePopover = (function(superClass) {\n  extend(ImagePopover, superClass);\n\n  function ImagePopover() {\n    return ImagePopover.__super__.constructor.apply(this, arguments);\n  }\n\n  ImagePopover.prototype.offset = {\n    top: 6,\n    left: -4\n  };\n\n  ImagePopover.prototype.render = function() {\n    var tpl;\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageUrl')) + \"</label>\\n    <input class=\\\"image-src\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n    <a class=\\\"btn-upload\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('uploadImage')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-upload\\\"></span>\\n    </a>\\n  </div>\\n  <div class='settings-field'>\\n    <label>\" + (this._t('imageAlt')) + \"</label>\\n    <input class=\\\"image-alt\\\" id=\\\"image-alt\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageSize')) + \"</label>\\n    <input class=\\\"image-size\\\" id=\\\"image-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size\\\" id=\\\"image-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n    <a class=\\\"btn-restore\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('restoreImageSize')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-undo\\\"></span>\\n    </a>\\n  </div>\\n</div>\";\n    this.el.addClass('image-popover').append(tpl);\n    this.srcEl = this.el.find('.image-src');\n    this.widthEl = this.el.find('#image-width');\n    this.heightEl = this.el.find('#image-height');\n    this.altEl = this.el.find('#image-alt');\n    this.srcEl.on('keydown', (function(_this) {\n      return function(e) {\n        var range;\n        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {\n          return;\n        }\n        e.preventDefault();\n        range = document.createRange();\n        _this.button.editor.selection.setRangeAfter(_this.target, range);\n        return _this.hide();\n      };\n    })(this));\n    this.srcEl.on('blur', (function(_this) {\n      return function(e) {\n        return _this._loadImage(_this.srcEl.val());\n      };\n    })(this));\n    this.el.find('.image-size').on('blur', (function(_this) {\n      return function(e) {\n        _this._resizeImg($(e.currentTarget));\n        return _this.el.data('popover').refresh();\n      };\n    })(this));\n    this.el.find('.image-size').on('keyup', (function(_this) {\n      return function(e) {\n        var inputEl;\n        inputEl = $(e.currentTarget);\n        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {\n          return _this._resizeImg(inputEl, true);\n        }\n      };\n    })(this));\n    this.el.find('.image-size').on('keydown', (function(_this) {\n      return function(e) {\n        var $img, inputEl, range;\n        inputEl = $(e.currentTarget);\n        if (e.which === 13 || e.which === 27) {\n          e.preventDefault();\n          if (e.which === 13) {\n            _this._resizeImg(inputEl);\n          } else {\n            _this._restoreImg();\n          }\n          $img = _this.target;\n          _this.hide();\n          range = document.createRange();\n          return _this.button.editor.selection.setRangeAfter($img, range);\n        } else if (e.which === 9) {\n          return _this.el.data('popover').refresh();\n        }\n      };\n    })(this));\n    this.altEl.on('keydown', (function(_this) {\n      return function(e) {\n        var range;\n        if (e.which === 13) {\n          e.preventDefault();\n          range = document.createRange();\n          _this.button.editor.selection.setRangeAfter(_this.target, range);\n          return _this.hide();\n        }\n      };\n    })(this));\n    this.altEl.on('keyup', (function(_this) {\n      return function(e) {\n        if (e.which === 13 || e.which === 27 || e.which === 9) {\n          return;\n        }\n        _this.alt = _this.altEl.val();\n        return _this.target.attr('alt', _this.alt);\n      };\n    })(this));\n    this.el.find('.btn-restore').on('click', (function(_this) {\n      return function(e) {\n        _this._restoreImg();\n        return _this.el.data('popover').refresh();\n      };\n    })(this));\n    this.editor.on('valuechanged', (function(_this) {\n      return function(e) {\n        if (_this.active) {\n          return _this.refresh();\n        }\n      };\n    })(this));\n    return this._initUploader();\n  };\n\n  ImagePopover.prototype._initUploader = function() {\n    var $uploadBtn, createInput;\n    $uploadBtn = this.el.find('.btn-upload');\n    if (this.editor.uploader == null) {\n      $uploadBtn.remove();\n      return;\n    }\n    createInput = (function(_this) {\n      return function() {\n        if (_this.input) {\n          _this.input.remove();\n        }\n        return _this.input = $('<input/>', {\n          type: 'file',\n          title: _this._t('uploadImage'),\n          multiple: true,\n          accept: 'image/*'\n        }).appendTo($uploadBtn);\n      };\n    })(this);\n    createInput();\n    this.el.on('click mousedown', 'input[type=file]', function(e) {\n      return e.stopPropagation();\n    });\n    return this.el.on('change', 'input[type=file]', (function(_this) {\n      return function(e) {\n        _this.editor.uploader.upload(_this.input, {\n          inline: true,\n          img: _this.target\n        });\n        return createInput();\n      };\n    })(this));\n  };\n\n  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {\n    var height, value, width;\n    if (onlySetVal == null) {\n      onlySetVal = false;\n    }\n    value = inputEl.val() * 1;\n    if (!(this.target && ($.isNumeric(value) || value < 0))) {\n      return;\n    }\n    if (inputEl.is(this.widthEl)) {\n      width = value;\n      height = this.height * value / this.width;\n      this.heightEl.val(height);\n    } else {\n      height = value;\n      width = this.width * value / this.height;\n      this.widthEl.val(width);\n    }\n    if (!onlySetVal) {\n      this.target.attr({\n        width: width,\n        height: height\n      });\n      return this.editor.trigger('valuechanged');\n    }\n  };\n\n  ImagePopover.prototype._restoreImg = function() {\n    var ref, size;\n    size = ((ref = this.target.data('image-size')) != null ? ref.split(\",\") : void 0) || [this.width, this.height];\n    this.target.attr({\n      width: size[0] * 1,\n      height: size[1] * 1\n    });\n    this.widthEl.val(size[0]);\n    this.heightEl.val(size[1]);\n    return this.editor.trigger('valuechanged');\n  };\n\n  ImagePopover.prototype._loadImage = function(src, callback) {\n    if (/^data:image/.test(src) && !this.editor.uploader) {\n      if (callback) {\n        callback(false);\n      }\n      return;\n    }\n    if (this.target.attr('src') === src) {\n      return;\n    }\n    return this.button.loadImage(this.target, src, (function(_this) {\n      return function(img) {\n        var blob;\n        if (!img) {\n          return;\n        }\n        if (_this.active) {\n          _this.width = img.width;\n          _this.height = img.height;\n          _this.widthEl.val(_this.width);\n          _this.heightEl.val(_this.height);\n        }\n        if (/^data:image/.test(src)) {\n          blob = _this.editor.util.dataURLtoBlob(src);\n          blob.name = \"Base64 Image.png\";\n          _this.editor.uploader.upload(blob, {\n            inline: true,\n            img: _this.target\n          });\n        } else {\n          _this.editor.trigger('valuechanged');\n        }\n        if (callback) {\n          return callback(img);\n        }\n      };\n    })(this));\n  };\n\n  ImagePopover.prototype.show = function() {\n    var $img, args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    ImagePopover.__super__.show.apply(this, args);\n    $img = this.target;\n    this.width = $img.width();\n    this.height = $img.height();\n    this.alt = $img.attr('alt');\n    if ($img.hasClass('uploading')) {\n      return this.srcEl.val(this._t('uploading')).prop('disabled', true);\n    } else {\n      this.srcEl.val($img.attr('src')).prop('disabled', false);\n      this.widthEl.val(this.width);\n      this.heightEl.val(this.height);\n      return this.altEl.val(this.alt);\n    }\n  };\n\n  return ImagePopover;\n\n})(Popover);\n\nSimditor.Toolbar.addButton(ImageButton);\n\nIndentButton = (function(superClass) {\n  extend(IndentButton, superClass);\n\n  function IndentButton() {\n    return IndentButton.__super__.constructor.apply(this, arguments);\n  }\n\n  IndentButton.prototype.name = 'indent';\n\n  IndentButton.prototype.icon = 'indent';\n\n  IndentButton.prototype._init = function() {\n    this.title = this._t(this.name) + ' (Tab)';\n    return IndentButton.__super__._init.call(this);\n  };\n\n  IndentButton.prototype._status = function() {};\n\n  IndentButton.prototype.command = function() {\n    return this.editor.indentation.indent();\n  };\n\n  return IndentButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(IndentButton);\n\nOutdentButton = (function(superClass) {\n  extend(OutdentButton, superClass);\n\n  function OutdentButton() {\n    return OutdentButton.__super__.constructor.apply(this, arguments);\n  }\n\n  OutdentButton.prototype.name = 'outdent';\n\n  OutdentButton.prototype.icon = 'outdent';\n\n  OutdentButton.prototype._init = function() {\n    this.title = this._t(this.name) + ' (Shift + Tab)';\n    return OutdentButton.__super__._init.call(this);\n  };\n\n  OutdentButton.prototype._status = function() {};\n\n  OutdentButton.prototype.command = function() {\n    return this.editor.indentation.indent(true);\n  };\n\n  return OutdentButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(OutdentButton);\n\nHrButton = (function(superClass) {\n  extend(HrButton, superClass);\n\n  function HrButton() {\n    return HrButton.__super__.constructor.apply(this, arguments);\n  }\n\n  HrButton.prototype.name = 'hr';\n\n  HrButton.prototype.icon = 'minus';\n\n  HrButton.prototype.htmlTag = 'hr';\n\n  HrButton.prototype._status = function() {};\n\n  HrButton.prototype.command = function() {\n    var $hr, $newBlock, $nextBlock, $rootBlock;\n    $rootBlock = this.editor.selection.rootNodes().first();\n    $nextBlock = $rootBlock.next();\n    if ($nextBlock.length > 0) {\n      this.editor.selection.save();\n    } else {\n      $newBlock = $('<p/>').append(this.editor.util.phBr);\n    }\n    $hr = $('<hr/>').insertAfter($rootBlock);\n    if ($newBlock) {\n      $newBlock.insertAfter($hr);\n      this.editor.selection.setRangeAtStartOf($newBlock);\n    } else {\n      this.editor.selection.restore();\n    }\n    return this.editor.trigger('valuechanged');\n  };\n\n  return HrButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(HrButton);\n\nTableButton = (function(superClass) {\n  extend(TableButton, superClass);\n\n  function TableButton() {\n    return TableButton.__super__.constructor.apply(this, arguments);\n  }\n\n  TableButton.prototype.name = 'table';\n\n  TableButton.prototype.icon = 'table';\n\n  TableButton.prototype.htmlTag = 'table';\n\n  TableButton.prototype.disableTag = 'pre, li, blockquote';\n\n  TableButton.prototype.menu = true;\n\n  TableButton.prototype._init = function() {\n    TableButton.__super__._init.call(this);\n    $.merge(this.editor.formatter._allowedTags, ['thead', 'th', 'tbody', 'tr', 'td', 'colgroup', 'col']);\n    $.extend(this.editor.formatter._allowedAttributes, {\n      td: ['rowspan', 'colspan'],\n      col: ['width']\n    });\n    $.extend(this.editor.formatter._allowedStyles, {\n      td: ['text-align'],\n      th: ['text-align']\n    });\n    this._initShortcuts();\n    this.editor.on('decorate', (function(_this) {\n      return function(e, $el) {\n        return $el.find('table').each(function(i, table) {\n          return _this.decorate($(table));\n        });\n      };\n    })(this));\n    this.editor.on('undecorate', (function(_this) {\n      return function(e, $el) {\n        return $el.find('table').each(function(i, table) {\n          return _this.undecorate($(table));\n        });\n      };\n    })(this));\n    this.editor.on('selectionchanged.table', (function(_this) {\n      return function(e) {\n        var $container, range;\n        _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');\n        range = _this.editor.selection.range();\n        if (!range) {\n          return;\n        }\n        $container = _this.editor.selection.containerNode();\n        if (range.collapsed && $container.is('.simditor-table')) {\n          if (_this.editor.selection.rangeAtStartOf($container)) {\n            $container = $container.find('th:first');\n          } else {\n            $container = $container.find('td:last');\n          }\n          _this.editor.selection.setRangeAtEndOf($container);\n        }\n        return $container.closest('td, th', _this.editor.body).addClass('active');\n      };\n    })(this));\n    this.editor.on('blur.table', (function(_this) {\n      return function(e) {\n        return _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');\n      };\n    })(this));\n    this.editor.keystroke.add('up', 'td', (function(_this) {\n      return function(e, $node) {\n        _this._tdNav($node, 'up');\n        return true;\n      };\n    })(this));\n    this.editor.keystroke.add('up', 'th', (function(_this) {\n      return function(e, $node) {\n        _this._tdNav($node, 'up');\n        return true;\n      };\n    })(this));\n    this.editor.keystroke.add('down', 'td', (function(_this) {\n      return function(e, $node) {\n        _this._tdNav($node, 'down');\n        return true;\n      };\n    })(this));\n    return this.editor.keystroke.add('down', 'th', (function(_this) {\n      return function(e, $node) {\n        _this._tdNav($node, 'down');\n        return true;\n      };\n    })(this));\n  };\n\n  TableButton.prototype._tdNav = function($td, direction) {\n    var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;\n    if (direction == null) {\n      direction = 'up';\n    }\n    action = direction === 'up' ? 'prev' : 'next';\n    ref = direction === 'up' ? ['tbody', 'thead'] : ['thead', 'tbody'], parentTag = ref[0], anotherTag = ref[1];\n    $tr = $td.parent('tr');\n    $anotherTr = this[\"_\" + action + \"Row\"]($tr);\n    if (!($anotherTr.length > 0)) {\n      return true;\n    }\n    index = $tr.find('td, th').index($td);\n    return this.editor.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));\n  };\n\n  TableButton.prototype._nextRow = function($tr) {\n    var $nextTr;\n    $nextTr = $tr.next('tr');\n    if ($nextTr.length < 1 && $tr.parent('thead').length > 0) {\n      $nextTr = $tr.parent('thead').next('tbody').find('tr:first');\n    }\n    return $nextTr;\n  };\n\n  TableButton.prototype._prevRow = function($tr) {\n    var $prevTr;\n    $prevTr = $tr.prev('tr');\n    if ($prevTr.length < 1 && $tr.parent('tbody').length > 0) {\n      $prevTr = $tr.parent('tbody').prev('thead').find('tr');\n    }\n    return $prevTr;\n  };\n\n  TableButton.prototype.initResize = function($table) {\n    var $colgroup, $resizeHandle, $wrapper;\n    $wrapper = $table.parent('.simditor-table');\n    $colgroup = $table.find('colgroup');\n    if ($colgroup.length < 1) {\n      $colgroup = $('<colgroup/>').prependTo($table);\n      $table.find('thead tr th').each(function(i, td) {\n        var $col;\n        return $col = $('<col/>').appendTo($colgroup);\n      });\n      this.refreshTableWidth($table);\n    }\n    $resizeHandle = $('<div />', {\n      \"class\": 'simditor-resize-handle',\n      contenteditable: 'false'\n    }).appendTo($wrapper);\n    $wrapper.on('mousemove', 'td, th', function(e) {\n      var $col, $td, index, ref, ref1, x;\n      if ($wrapper.hasClass('resizing')) {\n        return;\n      }\n      $td = $(e.currentTarget);\n      x = e.pageX - $(e.currentTarget).offset().left;\n      if (x < 5 && $td.prev().length > 0) {\n        $td = $td.prev();\n      }\n      if ($td.next('td, th').length < 1) {\n        $resizeHandle.hide();\n        return;\n      }\n      if ((ref = $resizeHandle.data('td')) != null ? ref.is($td) : void 0) {\n        $resizeHandle.show();\n        return;\n      }\n      index = $td.parent().find('td, th').index($td);\n      $col = $colgroup.find('col').eq(index);\n      if ((ref1 = $resizeHandle.data('col')) != null ? ref1.is($col) : void 0) {\n        $resizeHandle.show();\n        return;\n      }\n      return $resizeHandle.css('left', $td.position().left + $td.outerWidth() - 5).data('td', $td).data('col', $col).show();\n    });\n    $wrapper.on('mouseleave', function(e) {\n      return $resizeHandle.hide();\n    });\n    return $wrapper.on('mousedown', '.simditor-resize-handle', function(e) {\n      var $handle, $leftCol, $leftTd, $rightCol, $rightTd, minWidth, startHandleLeft, startLeftWidth, startRightWidth, startX, tableWidth;\n      $handle = $(e.currentTarget);\n      $leftTd = $handle.data('td');\n      $leftCol = $handle.data('col');\n      $rightTd = $leftTd.next('td, th');\n      $rightCol = $leftCol.next('col');\n      startX = e.pageX;\n      startLeftWidth = $leftTd.outerWidth() * 1;\n      startRightWidth = $rightTd.outerWidth() * 1;\n      startHandleLeft = parseFloat($handle.css('left'));\n      tableWidth = $leftTd.closest('table').width();\n      minWidth = 50;\n      $(document).on('mousemove.simditor-resize-table', function(e) {\n        var deltaX, leftWidth, rightWidth;\n        deltaX = e.pageX - startX;\n        leftWidth = startLeftWidth + deltaX;\n        rightWidth = startRightWidth - deltaX;\n        if (leftWidth < minWidth) {\n          leftWidth = minWidth;\n          deltaX = minWidth - startLeftWidth;\n          rightWidth = startRightWidth - deltaX;\n        } else if (rightWidth < minWidth) {\n          rightWidth = minWidth;\n          deltaX = startRightWidth - minWidth;\n          leftWidth = startLeftWidth + deltaX;\n        }\n        $leftCol.attr('width', (leftWidth / tableWidth * 100) + '%');\n        $rightCol.attr('width', (rightWidth / tableWidth * 100) + '%');\n        return $handle.css('left', startHandleLeft + deltaX);\n      });\n      $(document).one('mouseup.simditor-resize-table', function(e) {\n        $(document).off('.simditor-resize-table');\n        return $wrapper.removeClass('resizing');\n      });\n      $wrapper.addClass('resizing');\n      return false;\n    });\n  };\n\n  TableButton.prototype._initShortcuts = function() {\n    this.editor.hotkeys.add('ctrl+alt+up', (function(_this) {\n      return function(e) {\n        _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();\n        return false;\n      };\n    })(this));\n    this.editor.hotkeys.add('ctrl+alt+down', (function(_this) {\n      return function(e) {\n        _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();\n        return false;\n      };\n    })(this));\n    this.editor.hotkeys.add('ctrl+alt+left', (function(_this) {\n      return function(e) {\n        _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();\n        return false;\n      };\n    })(this));\n    return this.editor.hotkeys.add('ctrl+alt+right', (function(_this) {\n      return function(e) {\n        _this.editMenu.find('.menu-item[data-param=insertColRight]').click();\n        return false;\n      };\n    })(this));\n  };\n\n  TableButton.prototype.decorate = function($table) {\n    var $headRow, $tbody, $thead;\n    if ($table.parent('.simditor-table').length > 0) {\n      this.undecorate($table);\n    }\n    $table.wrap('<div class=\"simditor-table\"></div>');\n    if ($table.find('thead').length < 1) {\n      $thead = $('<thead />');\n      $headRow = $table.find('tr').first();\n      $thead.append($headRow);\n      this._changeCellTag($headRow, 'th');\n      $tbody = $table.find('tbody');\n      if ($tbody.length > 0) {\n        $tbody.before($thead);\n      } else {\n        $table.prepend($thead);\n      }\n    }\n    this.initResize($table);\n    return $table.parent();\n  };\n\n  TableButton.prototype.undecorate = function($table) {\n    if (!($table.parent('.simditor-table').length > 0)) {\n      return;\n    }\n    return $table.parent().replaceWith($table);\n  };\n\n  TableButton.prototype.renderMenu = function() {\n    var $table;\n    $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (this._t('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (this._t('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (this._t('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (this._t('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (this._t('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (this._t('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (this._t('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\n    this.createMenu = this.menuWrapper.find('.menu-create-table');\n    this.editMenu = this.menuWrapper.find('.menu-edit-table');\n    $table = this.createTable(6, 6).appendTo(this.createMenu);\n    this.createMenu.on('mouseenter', 'td, th', (function(_this) {\n      return function(e) {\n        var $td, $tr, $trs, num;\n        _this.createMenu.find('td, th').removeClass('selected');\n        $td = $(e.currentTarget);\n        $tr = $td.parent();\n        num = $tr.find('td, th').index($td) + 1;\n        $trs = $tr.prevAll('tr').addBack();\n        if ($tr.parent().is('tbody')) {\n          $trs = $trs.add($table.find('thead tr'));\n        }\n        return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\n      };\n    })(this));\n    this.createMenu.on('mouseleave', function(e) {\n      return $(e.currentTarget).find('td, th').removeClass('selected');\n    });\n    return this.createMenu.on('mousedown', 'td, th', (function(_this) {\n      return function(e) {\n        var $closestBlock, $td, $tr, colNum, rowNum;\n        _this.wrapper.removeClass('menu-on');\n        if (!_this.editor.inputManager.focused) {\n          return;\n        }\n        $td = $(e.currentTarget);\n        $tr = $td.parent();\n        colNum = $tr.find('td').index($td) + 1;\n        rowNum = $tr.prevAll('tr').length + 1;\n        if ($tr.parent().is('tbody')) {\n          rowNum += 1;\n        }\n        $table = _this.createTable(rowNum, colNum, true);\n        $closestBlock = _this.editor.selection.blockNodes().last();\n        if (_this.editor.util.isEmptyNode($closestBlock)) {\n          $closestBlock.replaceWith($table);\n        } else {\n          $closestBlock.after($table);\n        }\n        _this.decorate($table);\n        _this.editor.selection.setRangeAtStartOf($table.find('th:first'));\n        _this.editor.trigger('valuechanged');\n        return false;\n      };\n    })(this));\n  };\n\n  TableButton.prototype.createTable = function(row, col, phBr) {\n    var $table, $tbody, $td, $thead, $tr, c, k, l, r, ref, ref1;\n    $table = $('<table/>');\n    $thead = $('<thead/>').appendTo($table);\n    $tbody = $('<tbody/>').appendTo($table);\n    for (r = k = 0, ref = row; 0 <= ref ? k < ref : k > ref; r = 0 <= ref ? ++k : --k) {\n      $tr = $('<tr/>');\n      $tr.appendTo(r === 0 ? $thead : $tbody);\n      for (c = l = 0, ref1 = col; 0 <= ref1 ? l < ref1 : l > ref1; c = 0 <= ref1 ? ++l : --l) {\n        $td = $(r === 0 ? '<th/>' : '<td/>').appendTo($tr);\n        if (phBr) {\n          $td.append(this.editor.util.phBr);\n        }\n      }\n    }\n    return $table;\n  };\n\n  TableButton.prototype.refreshTableWidth = function($table) {\n    var cols, tableWidth;\n    tableWidth = $table.width();\n    cols = $table.find('col');\n    return $table.find('thead tr th').each(function(i, td) {\n      var $col;\n      $col = cols.eq(i);\n      return $col.attr('width', ($(td).outerWidth() / tableWidth * 100) + '%');\n    });\n  };\n\n  TableButton.prototype.setActive = function(active) {\n    TableButton.__super__.setActive.call(this, active);\n    if (active) {\n      this.createMenu.hide();\n      return this.editMenu.show();\n    } else {\n      this.createMenu.show();\n      return this.editMenu.hide();\n    }\n  };\n\n  TableButton.prototype._changeCellTag = function($tr, tagName) {\n    return $tr.find('td, th').each(function(i, cell) {\n      var $cell;\n      $cell = $(cell);\n      return $cell.replaceWith(\"<\" + tagName + \">\" + ($cell.html()) + \"</\" + tagName + \">\");\n    });\n  };\n\n  TableButton.prototype.deleteRow = function($td) {\n    var $newTr, $tr, index;\n    $tr = $td.parent('tr');\n    if ($tr.closest('table').find('tr').length < 1) {\n      return this.deleteTable($td);\n    } else {\n      $newTr = this._nextRow($tr);\n      if (!($newTr.length > 0)) {\n        $newTr = this._prevRow($tr);\n      }\n      index = $tr.find('td, th').index($td);\n      if ($tr.parent().is('thead')) {\n        $newTr.appendTo($tr.parent());\n        this._changeCellTag($newTr, 'th');\n      }\n      $tr.remove();\n      return this.editor.selection.setRangeAtEndOf($newTr.find('td, th').eq(index));\n    }\n  };\n\n  TableButton.prototype.insertRow = function($td, direction) {\n    var $newTr, $table, $tr, cellTag, colNum, i, index, k, ref;\n    if (direction == null) {\n      direction = 'after';\n    }\n    $tr = $td.parent('tr');\n    $table = $tr.closest('table');\n    colNum = 0;\n    $table.find('tr').each(function(i, tr) {\n      return colNum = Math.max(colNum, $(tr).find('td').length);\n    });\n    index = $tr.find('td, th').index($td);\n    $newTr = $('<tr/>');\n    cellTag = 'td';\n    if (direction === 'after' && $tr.parent().is('thead')) {\n      $tr.parent().next('tbody').prepend($newTr);\n    } else if (direction === 'before' && $tr.parent().is('thead')) {\n      $tr.before($newTr);\n      $tr.parent().next('tbody').prepend($tr);\n      this._changeCellTag($tr, 'td');\n      cellTag = 'th';\n    } else {\n      $tr[direction]($newTr);\n    }\n    for (i = k = 1, ref = colNum; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n      $(\"<\" + cellTag + \"/>\").append(this.editor.util.phBr).appendTo($newTr);\n    }\n    return this.editor.selection.setRangeAtStartOf($newTr.find('td, th').eq(index));\n  };\n\n  TableButton.prototype.deleteCol = function($td) {\n    var $newTd, $table, $tr, index, noOtherCol, noOtherRow;\n    $tr = $td.parent('tr');\n    noOtherRow = $tr.closest('table').find('tr').length < 2;\n    noOtherCol = $td.siblings('td, th').length < 1;\n    if (noOtherRow && noOtherCol) {\n      return this.deleteTable($td);\n    } else {\n      index = $tr.find('td, th').index($td);\n      $newTd = $td.next('td, th');\n      if (!($newTd.length > 0)) {\n        $newTd = $tr.prev('td, th');\n      }\n      $table = $tr.closest('table');\n      $table.find('col').eq(index).remove();\n      $table.find('tr').each(function(i, tr) {\n        return $(tr).find('td, th').eq(index).remove();\n      });\n      this.refreshTableWidth($table);\n      return this.editor.selection.setRangeAtEndOf($newTd);\n    }\n  };\n\n  TableButton.prototype.insertCol = function($td, direction) {\n    var $col, $newCol, $newTd, $table, $tr, index, tableWidth, width;\n    if (direction == null) {\n      direction = 'after';\n    }\n    $tr = $td.parent('tr');\n    index = $tr.find('td, th').index($td);\n    $table = $td.closest('table');\n    $col = $table.find('col').eq(index);\n    $table.find('tr').each((function(_this) {\n      return function(i, tr) {\n        var $newTd, cellTag;\n        cellTag = $(tr).parent().is('thead') ? 'th' : 'td';\n        $newTd = $(\"<\" + cellTag + \"/>\").append(_this.editor.util.phBr);\n        return $(tr).find('td, th').eq(index)[direction]($newTd);\n      };\n    })(this));\n    $newCol = $('<col/>');\n    $col[direction]($newCol);\n    tableWidth = $table.width();\n    width = Math.max(parseFloat($col.attr('width')) / 2, 50 / tableWidth * 100);\n    $col.attr('width', width + '%');\n    $newCol.attr('width', width + '%');\n    this.refreshTableWidth($table);\n    $newTd = direction === 'after' ? $td.next('td, th') : $td.prev('td, th');\n    return this.editor.selection.setRangeAtStartOf($newTd);\n  };\n\n  TableButton.prototype.deleteTable = function($td) {\n    var $block, $table;\n    $table = $td.closest('.simditor-table');\n    $block = $table.next('p');\n    $table.remove();\n    if ($block.length > 0) {\n      return this.editor.selection.setRangeAtStartOf($block);\n    }\n  };\n\n  TableButton.prototype.command = function(param) {\n    var $td;\n    $td = this.editor.selection.containerNode().closest('td, th');\n    if (!($td.length > 0)) {\n      return;\n    }\n    if (param === 'deleteRow') {\n      this.deleteRow($td);\n    } else if (param === 'insertRowAbove') {\n      this.insertRow($td, 'before');\n    } else if (param === 'insertRowBelow') {\n      this.insertRow($td);\n    } else if (param === 'deleteCol') {\n      this.deleteCol($td);\n    } else if (param === 'insertColLeft') {\n      this.insertCol($td, 'before');\n    } else if (param === 'insertColRight') {\n      this.insertCol($td);\n    } else if (param === 'deleteTable') {\n      this.deleteTable($td);\n    } else {\n      return;\n    }\n    return this.editor.trigger('valuechanged');\n  };\n\n  return TableButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(TableButton);\n\nStrikethroughButton = (function(superClass) {\n  extend(StrikethroughButton, superClass);\n\n  function StrikethroughButton() {\n    return StrikethroughButton.__super__.constructor.apply(this, arguments);\n  }\n\n  StrikethroughButton.prototype.name = 'strikethrough';\n\n  StrikethroughButton.prototype.icon = 'strikethrough';\n\n  StrikethroughButton.prototype.htmlTag = 'strike';\n\n  StrikethroughButton.prototype.disableTag = 'pre';\n\n  StrikethroughButton.prototype._activeStatus = function() {\n    var active;\n    active = document.queryCommandState('strikethrough') === true;\n    this.setActive(active);\n    return this.active;\n  };\n\n  StrikethroughButton.prototype.command = function() {\n    document.execCommand('strikethrough');\n    if (!this.editor.util.support.oninput) {\n      this.editor.trigger('valuechanged');\n    }\n    return $(document).trigger('selectionchange');\n  };\n\n  return StrikethroughButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(StrikethroughButton);\n\nAlignmentButton = (function(superClass) {\n  extend(AlignmentButton, superClass);\n\n  function AlignmentButton() {\n    return AlignmentButton.__super__.constructor.apply(this, arguments);\n  }\n\n  AlignmentButton.prototype.name = \"alignment\";\n\n  AlignmentButton.prototype.icon = 'align-left';\n\n  AlignmentButton.prototype.htmlTag = 'p, h1, h2, h3, h4, td, th';\n\n  AlignmentButton.prototype._init = function() {\n    this.menu = [\n      {\n        name: 'left',\n        text: this._t('alignLeft'),\n        icon: 'align-left',\n        param: 'left'\n      }, {\n        name: 'center',\n        text: this._t('alignCenter'),\n        icon: 'align-center',\n        param: 'center'\n      }, {\n        name: 'right',\n        text: this._t('alignRight'),\n        icon: 'align-right',\n        param: 'right'\n      }\n    ];\n    return AlignmentButton.__super__._init.call(this);\n  };\n\n  AlignmentButton.prototype.setActive = function(active, align) {\n    if (align == null) {\n      align = 'left';\n    }\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\n      align = 'left';\n    }\n    if (align === 'left') {\n      AlignmentButton.__super__.setActive.call(this, false);\n    } else {\n      AlignmentButton.__super__.setActive.call(this, active);\n    }\n    this.el.removeClass('align-left align-center align-right');\n    if (active) {\n      this.el.addClass('align-' + align);\n    }\n    this.setIcon('align-' + align);\n    return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\n  };\n\n  AlignmentButton.prototype._status = function() {\n    this.nodes = this.editor.selection.nodes().filter(this.htmlTag);\n    if (this.nodes.length < 1) {\n      this.setDisabled(true);\n      return this.setActive(false);\n    } else {\n      this.setDisabled(false);\n      return this.setActive(true, this.nodes.first().css('text-align'));\n    }\n  };\n\n  AlignmentButton.prototype.command = function(align) {\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\n      throw new Error(\"simditor alignment button: invalid align \" + align);\n    }\n    this.nodes.css({\n      'text-align': align === 'left' ? '' : align\n    });\n    this.editor.trigger('valuechanged');\n    return this.editor.inputManager.throttledSelectionChanged();\n  };\n\n  return AlignmentButton;\n\n})(Button);\n\nSimditor.Toolbar.addButton(AlignmentButton);\n\nreturn Simditor;\n\n}));\n"],"sourceRoot":"/source/"}